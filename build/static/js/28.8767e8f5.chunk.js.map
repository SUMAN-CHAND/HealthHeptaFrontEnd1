{"version":3,"sources":["component/AdminPanel/AdminLogin.js","img/loginpageimg.jpg","component/usePasswordToggle.js","component/LoginValidaation.js"],"names":["AdminLogin","axiosClient","defaults","withCredentials","danger","toast","error","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","_useState","useState","phone","password","_useState2","_slicedToArray","values","setValues","navigate","useNavigate","_useState3","_useState4","errors","setErrors","handleInput","event","prev","_objectSpread","_defineProperty","target","name","value","_usePasswordToggle","usePasswordToggle","_usePasswordToggle2","PasswordInputType","ToggleIcon","React","createElement","className","src","img","style","width","alt","height","action","onSubmit","preventDefault","validation","post","then","res","data","alert","success","state","loggedIn","sessionStorage","setItem","id","catch","err","console","log","textAlign","fontWeight","htmlFor","onChange","type","required","pattern","placeholder","border","color","backgroundColor","paddingBottom","ToastContainer","module","exports","__webpack_require__","p","visible","setVisiblity","FaEye","onClick","FaEyeSlash"],"mappings":"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","file":"static/js/28.8767e8f5.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport img from '../../img/loginpageimg.jpg'\r\nimport '../style.css';\r\nimport validation from '../LoginValidaation';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport axiosClient from '../axiosClient';\r\nimport usePasswordToggle from '../usePasswordToggle';\r\nexport default function AdminLogin() {\r\n    //main for connecting backend with Session\r\n    axiosClient.defaults.withCredentials = true;\r\n    const success = () => toast.success('Login Successfull', {\r\n        position: \"top-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"light\",\r\n    });;\r\n    const danger = () => toast.error('Login Fail ! Phone Number Or Password dose not match ', {\r\n        position: \"top-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"light\",\r\n    });\r\n\r\n    const [values, setValues] = useState({\r\n        phone: '',\r\n        password: ''\r\n    })\r\n    const navigate = useNavigate();\r\n    const [errors, setErrors] = useState([])\r\n    const handleInput = (event) => {\r\n        setValues(prev => ({ ...prev, [event.target.name]: [event.target.value] }))\r\n    }\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        setErrors(validation(values));\r\n        if (errors.phone === \"\" && errors.password === \"\") {\r\n            axiosClient.post(`/superadmin/login`, values)\r\n                .then(res => {\r\n                    if (res.data === null) {\r\n                        alert('No data found')\r\n                        danger();\r\n                    }\r\n                    else if (res.data[0] !== null) {\r\n                        success();\r\n                        navigate('/superadmin', { state: { loggedIn: res.data[1] } });\r\n                        sessionStorage.setItem(\"user_id\", res.data[0].id);\r\n                        sessionStorage.setItem(\"LogedIn\", res.data[1]);\r\n                    }\r\n                    else {\r\n                        danger();\r\n                    }\r\n                })\r\n                .catch(err => console.log(err));\r\n        }\r\n    }\r\n    const [PasswordInputType, ToggleIcon] = usePasswordToggle();\r\n\r\n    return (\r\n        <div className='d-flex justify-content-center align-item-center p-3 m-3'>\r\n\r\n            <div className=\"img login-img\" >\r\n                <img src={img} style={{ width: '38vw' }} alt=\"....\" />\r\n            </div>\r\n            <div className='bg-white m-3 pt-3 pl-2 rounded w-30 shadow' style={{ height: '110%' }}>\r\n                <form action='submit' onSubmit={handleSubmit}>\r\n                    <h5>Log in to <span className='text-info'>Healthhepta</span></h5>\r\n                    \r\n                    <div className='p-2' style={{ textAlign: 'initial', fontWeight: '700' }} >\r\n                        <label className='p-2' htmlFor=\"phonenumber\">Phone Number : </label><br></br>\r\n                        <input\r\n                            className='m-2 p-1'\r\n                            onChange={handleInput}\r\n                            name='phone'\r\n                            id=\"phone\"\r\n                            type=\"tel\"\r\n                            required\r\n                            pattern=\"[0-9]{3}[0-9]{3}[0-9]{4}\" placeholder=\"xxxxxxxxxx\" style={{ width: '90%', border: '1px solid black' }} />\r\n                        <span className=\"validity\"></span>\r\n                    </div>\r\n                    <div className='mb-3 p-2' style={{ textAlign: 'initial', fontWeight: '700' ,position:'relative'}} >\r\n                        <label className='p-2' htmlFor=\"password\">Password : </label>\r\n                        <input className='m-2  p-1' type={PasswordInputType}  style={{ width: '90%' }} name='password' placeholder='Enter Password' onChange={handleInput} />\r\n                        <br />\r\n                        <span className=\"password-toogle-icon\">{ToggleIcon}</span>\r\n\r\n                        {errors.password && <span className='text-danger'>{errors.password}</span>}\r\n                    </div>\r\n                    <button type='submit' className='btn' style={{ width: '90%', color: 'white', backgroundColor: '#6775ec' }}>Log In</button>\r\n                    <p style={{paddingBottom:'2vh'}}>You are agree to our <span className='text-primary'>terms & policies</span> </p>\r\n                </form>\r\n            </div>\r\n            <ToastContainer />\r\n        </div>\r\n    )\r\n}\r\n","module.exports = __webpack_public_path__ + \"static/media/loginpageimg.27e1c41d.jpg\";","import React, { useState } from 'react'\r\nimport { FaEye,FaEyeSlash } from \"react-icons/fa\";\r\nfunction usePasswordToggle() {\r\n    const [visible,setVisiblity] = useState(false);\r\n    const Icon = visible ? <FaEye onClick={()=>setVisiblity(visible=>!visible)} /> : <FaEyeSlash onClick={()=>setVisiblity(visible=>!visible)}/>\r\n    const InputType = visible ? \"text\" : \"password\"\r\n  return [InputType,Icon]\r\n} \r\nexport default usePasswordToggle\r\n","function validation(values){\r\n    let error = {}\r\n    \r\n    if(values.phone === \"\"){\r\n        error.phone = \"The phone number can not be empty\"\r\n    }\r\n   \r\n    else{\r\n        error.phone = \"\"\r\n    }\r\n    \r\n    if(values.password === \"\"){\r\n        error.password = \"The password number can not be empty\"\r\n    }\r\n   \r\n    else{\r\n        error.password = \"\"\r\n    }\r\n    return error;\r\n\r\n}\r\nexport default validation;"],"sourceRoot":""}