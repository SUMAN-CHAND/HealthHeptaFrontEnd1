{"version":3,"sources":["component/UploadImage.js","component/Service_Provider/AddNewLaboratoryTest.js"],"names":["_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","UploadImage","_ref","onImageUpload","_useState","useState","_useState2","_slicedToArray","file","setFile","_useState3","_useState4","images","setImages","handleUpload","_ref2","_asyncToGenerator","_callee","formData","response","imageId","_context","size","alert","FormData","append","axiosClient","post","loadImages","data","t0","console","apply","arguments","get","React","createElement","className","onChange","e","target","files","onClick","map","img","id","src","concat","process","path","alt","width","AddNewLaboratoryTest","defaults","withCredentials","Test_Name","Test_Desc","price","test_imageId","setValues","setCheck","handleInput","event","_objectSpread","_defineProperty","navigate","useNavigate","handleSubmit","_callee2","_context2","preventDefault","res","loggedIn","_x2","log","_x","height","fontSize","style","display","flexDirection","justifyContent","alignItems","minWidth","action","onSubmit","padding","xmlns","fill","viewBox","d","textAlign","fontWeight","htmlFor","required","placeholder","marginLeft","color","cursor"],"mappings":"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","file":"static/js/67.23a3163d.chunk.js","sourcesContent":["// import AWS from \"aws-sdk\";\r\n// import React, { useState } from \"react\";\r\n\r\n// function UploadImage() {\r\n//   // Create state to store file\r\n//   const [file, setFile] = useState(null);\r\n\r\n//   // Function to upload file to s3\r\n//   const uploadFile = async () => {\r\n//     // S3 Bucket Name\r\n//     const S3_BUCKET = \"bucket-name\";\r\n\r\n//     // S3 Region\r\n//     const REGION = \"region\";\r\n\r\n//     // S3 Credentials\r\n//     AWS.config.update({\r\n//       accessKeyId: \"youraccesskeyhere\",\r\n//       secretAccessKey: \"yoursecretaccesskeyhere\",\r\n//     });\r\n//     const s3 = new AWS.S3({\r\n//       params: { Bucket: S3_BUCKET },\r\n//       region: REGION,\r\n//     });\r\n\r\n//     // Files Parameters\r\n\r\n//     const params = {\r\n//       Bucket: S3_BUCKET,\r\n//       Key: file.name,\r\n//       Body: file,\r\n//     };\r\n\r\n//     // Uploading file to s3\r\n\r\n//     var upload = s3\r\n//       .putObject(params)\r\n//       .on(\"httpUploadProgress\", (evt) => {\r\n//         // File uploading progress\r\n//         console.log(\r\n//           \"Uploading \" + parseInt((evt.loaded * 100) / evt.total) + \"%\"\r\n//         );\r\n//       })\r\n//       .promise();\r\n\r\n//     await upload.then((err, data) => {\r\n//       console.log(err);\r\n//       // Fille successfully uploaded\r\n//       alert(\"File uploaded successfully.\");\r\n//     });\r\n//   };\r\n//   // Function to handle file and store it to file state\r\n//   const handleFileChange = (e) => {\r\n//     // Uploaded file\r\n//     const file = e.target.files[0];\r\n//     // Changing file state\r\n//     setFile(file);\r\n//   };\r\n//   return (\r\n//     <div className=\"\">\r\n//       <div>\r\n//         <input type=\"file\" onChange={handleFileChange} />\r\n//         <button onClick={uploadFile}>Upload</button>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default UploadImage;\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport axiosClient from './axiosClient';\r\n\r\nexport default function UploadImage({ onImageUpload }) {\r\n  const [file, setFile] = useState(null);\r\n\r\n  const handleFileChange = (e) => {\r\n    setFile(e.target.files[0]);\r\n  };\r\n  // const [image, setImage] = useState(null);\r\n  const [images, setImages] = useState([]);\r\n\r\n  // const handleImageChange = (e) => {\r\n  //     setImage(e.target.files[0]);\r\n  // };\r\n\r\n  // const handleUpload = () => {\r\n  //     const formData = new FormData();\r\n  //     formData.append('image', image);\r\n\r\n  //     axios\r\n  //         .post('/upload', formData, {\r\n  //             headers: {\r\n  //                 'Content-Type': 'multipart/form-data',\r\n  //             },\r\n  //         })\r\n  //         .then((response) => {\r\n  //             console.log(response.data);\r\n  //             loadImages();\r\n  //         })\r\n  //         .catch((error) => {\r\n  //             console.error('Image upload error: ' + error);\r\n  //         });\r\n  // };\r\n\r\n  const handleUpload = async () => {\r\n    if (file.size > 100000) {\r\n      alert(\"File size more then 1Mb\")\r\n    } else {\r\n      if (file) {\r\n        const formData = new FormData();\r\n        formData.append('image', file);\r\n\r\n        try {\r\n          const response = await axiosClient.post(`/upload`, formData);\r\n          loadImages();\r\n          const imageId = response.data.imageId; // Retrieve the image ID from the response\r\n          onImageUpload(imageId); // Pass the image ID to the parent component\r\n        } catch (error) {\r\n          console.error('Error uploading image:', error);\r\n        }\r\n      }\r\n    }\r\n  };\r\n  const loadImages = () => {\r\n    axiosClient\r\n      .get('/images')\r\n      .then((response) => {\r\n        setImages(response.data);\r\n      })\r\n      .catch((error) => {\r\n        console.error('Image retrieval error: ' + error);\r\n      });\r\n  };\r\n\r\n  //   useEffect(() => {\r\n  //     loadImages();\r\n  //   }, []);\r\n\r\n  return (\r\n    <div className='image-upload'>\r\n      {/* <h1>Image Upload</h1> */}\r\n      <input type=\"file\" onChange={handleFileChange} />\r\n      <button className='btn btn-warning m-2' onClick={handleUpload}>Upload Image</button>\r\n\r\n      <div>\r\n        {images.map((img) => (\r\n          <div key={img.id}>\r\n            <img\r\n              src={`http://${process.env.REACT_APP_HOST}:8081/${img.path}`}\r\n              alt={img.name}\r\n              width=\"50\"\r\n            />\r\n            <p>{img.name}</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n","import React, {useState } from 'react';\r\nimport {useNavigate } from 'react-router-dom';\r\nimport UploadImage from '../UploadImage';\r\nimport axiosClient from '../axiosClient';\r\n\r\nexport default function AddNewLaboratoryTest() {\r\n    // Main for connecting backend with Session\r\n    axiosClient.defaults.withCredentials = true;\r\n    const [values, setValues] = useState({\r\n        Test_Name: '',\r\n        Test_Desc: '',\r\n        price:'',\r\n        test_imageId: null\r\n    });\r\n\r\n    // Callback function to update the productImageId when an image is uploaded\r\n    const handleImageUpload = (imageId) => {\r\n        setValues({ ...values, test_imageId: imageId });\r\n    };\r\n\r\n    const [check, setCheck] = useState(false);\r\n\r\n    const handleInput = (event) => {\r\n        setValues(prev => ({ ...prev, [event.target.name]: [event.target.value] }));\r\n    };\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            axiosClient.post(`/sub-admin/add-new-laboratory-test`, values)\r\n                .then(async (res) => {\r\n                    if (res.data > 0) {\r\n                    //    console.log(res.data)\r\n                    alert('Laboratory Test Added Successfully!!');\r\n                                    navigate('/sub-admin/home', { state: { loggedIn: true } });\r\n                    } else if (res.data === null) {\r\n                        alert('Error');\r\n                    } else {\r\n                        alert('Error');\r\n                    }\r\n                })\r\n                .catch((err) => console.log(err));\r\n\r\n\r\n        } catch (error) {\r\n            console.error('An error occurred:', error);\r\n        }\r\n    };\r\n\r\n    const dateStyle = {\r\n        width: '13.2rem',\r\n        height: '2rem',\r\n        fontSize: '1.1rem',\r\n        width: '90%',\r\n    };\r\n    return (\r\n        <div>\r\n            <div className=\"container mt-3\" style={{ display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center' }}>\r\n                <h2 className='p-2' style={{}}>Add New Laboratory Test</h2>\r\n                <div className='bg-white m-3 pt-3 pl-2 rounded w-30 shadow' style={{ minWidth: '40vw', height: '110%' }}>\r\n                    <form action='submit' onSubmit={handleSubmit} style={{ padding: '1vw' }}>\r\n                        {/* <h5> <span className='text-info'>Healthhepta</span></h5> */}\r\n\r\n                        <div className='mb-3' style={{ display: 'none' }}>\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" viewBox=\"0 0 16 16\" className='bi bi-person person'>\r\n                                <path d=\"M8 8a3 3 0 1 0 0-6 3 3 0 0 0 0 6Zm2-3a2 2 0 1 1-4 0 2 2 0 0 1 4 0Zm4 8c0 1-1 1-1 1H3s-1 0-1-1 1-4 6-4 6 3 6 4Zm-1-.004c-.001-.246-.154-.986-.832-1.664C11.516 10.68 10.289 10 8 10c-2.29 0-3.516.68-4.168 1.332-.678.678-.83 1.418-.832 1.664h10Z\" />\r\n                            </svg>\r\n                        </div>\r\n                        <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\r\n                            <div className=' p-1' style={{ textAlign: 'initial', fontWeight: '700' }} >\r\n                                <label className='p-1' htmlFor=\"doc_name\">Test Name : </label><br></br>\r\n                                <input required className='m-2 p-1' type=\"text\" style={{ width: '33vw' }} placeholder='Enter Test Full Name'\r\n                                    name='Test_Name' onChange={handleInput} /><br />\r\n                            </div>\r\n                            <div className=' p-1' style={{ textAlign: 'initial', fontWeight: '700' }} >\r\n                                <label className='p-1' htmlFor=\"doc_desc\">Test Description : </label><br></br>\r\n                                <input required className='m-2 p-1' type=\"text\" style={{ width: '33vw' }} placeholder='Enter Test  Description'\r\n                                    name='Test_Desc' onChange={handleInput} /><br />\r\n                            </div>\r\n                        </div>\r\n                        <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\r\n                            <div className=' p-1' style={{ textAlign: 'initial', fontWeight: '700' }} >\r\n                                <label className='p-1' htmlFor=\"doc_name\">Price : </label><br></br>\r\n                                <input required className='m-2 p-1' type=\"number\" style={{ width: '33vw' }} placeholder='Enter Price of the Test'\r\n                                    name='price' onChange={handleInput} /><br />\r\n                            </div>\r\n                           \r\n                        </div>\r\n                 \r\n                        <div className=' p-1' style={{ textAlign: 'initial', fontWeight: '700' }} >\r\n                            <label className='p-1' htmlFor=\"product_category\">Add Your Image </label>\r\n                            {/* <input className='m-2  p-1' type=\"file\" style={{ width: '90%' }} placeholder='Enter Product image'\r\n                                name='img' onChange={handleInput} /><br /> */}\r\n                            <UploadImage onImageUpload={handleImageUpload} />\r\n                        </div>\r\n\r\n                        <div className=\"form-check \">\r\n                            <input required className=\"form-check-input\" type=\"checkbox\" value=\"check\" id=\"flexCheckChecked\" style={{ marginLeft: '1vw' }} onChange={() => { setCheck(true) }} />\r\n                            <label className=\"form-check-label\" htmlFor=\"flexCheckChecked\">\r\n                                <p>Please confirm the data are  <span className='text-warning'>right</span> </p>\r\n\r\n                            </label>\r\n                        </div>\r\n                        {/* <Link to='/login'> */}\r\n                        <button type='submit' className='btn  btn-default border p-2 mb-3 btn-info' style={{ width: '40%', color: 'white', cursor: 'pointer' }}>Submit</button>\r\n                        {/* </Link> */}\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n"],"sourceRoot":""}