{"version":3,"sources":["component/UploadImage.js","component/Service_Provider/CompelteProfileFrom.js"],"names":["_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","UploadImage","_ref","onImageUpload","_useState","useState","_useState2","_slicedToArray","file","setFile","_useState3","_useState4","images","setImages","handleUpload","_ref2","_asyncToGenerator","_callee","formData","response","imageId","_context","size","alert","FormData","append","axiosClient","post","loadImages","data","t0","console","apply","arguments","get","React","createElement","className","onChange","e","target","files","onClick","map","img","id","src","concat","process","path","alt","width","nextId","CompelteProfileFrom","defaults","withCredentials","location","useLocation","role","subadmin_id","insertId","fullname","phone","landmark","description","Reg_id","OpeningTime","CloseingTime","owner_name","owner_phonenumber","Village","P_O","City","district","pin","SubAdminImageId","LicenceImageId","allPinCodes","setValues","handleInput","event","_objectSpread","_defineProperty","pin_code","setPinCode","_useState5","_useState6","navigate","useNavigate","handleSubmit","preventDefault","res","loggedIn","log","_x","_useState7","height","fontSize","_useState8","_useState9","_useState10","_useState11","_useState12","_useState13","_useState14","_useState15","_useState16","_useState17","input","_useState18","_useState19","_useState20","_useState21","_useState22","_useState23","_useState24","_useState25","_useState26","style","display","flexDirection","justifyContent","alignItems","minWidth","action","onSubmit","padding","xmlns","fill","viewBox","d","textAlign","fontWeight","htmlFor","Fragment","required","placeholder","toUpperCase","pattern","border","borderRadius","Name","District","State","pin_codes","marginLeft","color","cursor"],"mappings":"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","file":"static/js/48.4a088db8.chunk.js","sourcesContent":["// import AWS from \"aws-sdk\";\r\n// import React, { useState } from \"react\";\r\n\r\n// function UploadImage() {\r\n//   // Create state to store file\r\n//   const [file, setFile] = useState(null);\r\n\r\n//   // Function to upload file to s3\r\n//   const uploadFile = async () => {\r\n//     // S3 Bucket Name\r\n//     const S3_BUCKET = \"bucket-name\";\r\n\r\n//     // S3 Region\r\n//     const REGION = \"region\";\r\n\r\n//     // S3 Credentials\r\n//     AWS.config.update({\r\n//       accessKeyId: \"youraccesskeyhere\",\r\n//       secretAccessKey: \"yoursecretaccesskeyhere\",\r\n//     });\r\n//     const s3 = new AWS.S3({\r\n//       params: { Bucket: S3_BUCKET },\r\n//       region: REGION,\r\n//     });\r\n\r\n//     // Files Parameters\r\n\r\n//     const params = {\r\n//       Bucket: S3_BUCKET,\r\n//       Key: file.name,\r\n//       Body: file,\r\n//     };\r\n\r\n//     // Uploading file to s3\r\n\r\n//     var upload = s3\r\n//       .putObject(params)\r\n//       .on(\"httpUploadProgress\", (evt) => {\r\n//         // File uploading progress\r\n//         console.log(\r\n//           \"Uploading \" + parseInt((evt.loaded * 100) / evt.total) + \"%\"\r\n//         );\r\n//       })\r\n//       .promise();\r\n\r\n//     await upload.then((err, data) => {\r\n//       console.log(err);\r\n//       // Fille successfully uploaded\r\n//       alert(\"File uploaded successfully.\");\r\n//     });\r\n//   };\r\n//   // Function to handle file and store it to file state\r\n//   const handleFileChange = (e) => {\r\n//     // Uploaded file\r\n//     const file = e.target.files[0];\r\n//     // Changing file state\r\n//     setFile(file);\r\n//   };\r\n//   return (\r\n//     <div className=\"\">\r\n//       <div>\r\n//         <input type=\"file\" onChange={handleFileChange} />\r\n//         <button onClick={uploadFile}>Upload</button>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default UploadImage;\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport axiosClient from './axiosClient';\r\n\r\nexport default function UploadImage({ onImageUpload }) {\r\n  const [file, setFile] = useState(null);\r\n\r\n  const handleFileChange = (e) => {\r\n    setFile(e.target.files[0]);\r\n  };\r\n  // const [image, setImage] = useState(null);\r\n  const [images, setImages] = useState([]);\r\n\r\n  // const handleImageChange = (e) => {\r\n  //     setImage(e.target.files[0]);\r\n  // };\r\n\r\n  // const handleUpload = () => {\r\n  //     const formData = new FormData();\r\n  //     formData.append('image', image);\r\n\r\n  //     axios\r\n  //         .post('/upload', formData, {\r\n  //             headers: {\r\n  //                 'Content-Type': 'multipart/form-data',\r\n  //             },\r\n  //         })\r\n  //         .then((response) => {\r\n  //             console.log(response.data);\r\n  //             loadImages();\r\n  //         })\r\n  //         .catch((error) => {\r\n  //             console.error('Image upload error: ' + error);\r\n  //         });\r\n  // };\r\n\r\n  const handleUpload = async () => {\r\n    if (file.size > 100000) {\r\n      alert(\"File size more then 1Mb\")\r\n    } else {\r\n      if (file) {\r\n        const formData = new FormData();\r\n        formData.append('image', file);\r\n\r\n        try {\r\n          const response = await axiosClient.post(`/upload`, formData);\r\n          loadImages();\r\n          const imageId = response.data.imageId; // Retrieve the image ID from the response\r\n          onImageUpload(imageId); // Pass the image ID to the parent component\r\n        } catch (error) {\r\n          console.error('Error uploading image:', error);\r\n        }\r\n      }\r\n    }\r\n  };\r\n  const loadImages = () => {\r\n    axiosClient\r\n      .get('/images')\r\n      .then((response) => {\r\n        setImages(response.data);\r\n      })\r\n      .catch((error) => {\r\n        console.error('Image retrieval error: ' + error);\r\n      });\r\n  };\r\n\r\n  //   useEffect(() => {\r\n  //     loadImages();\r\n  //   }, []);\r\n\r\n  return (\r\n    <div className='image-upload'>\r\n      {/* <h1>Image Upload</h1> */}\r\n      <input type=\"file\" onChange={handleFileChange} />\r\n      <button className='btn btn-warning m-2' onClick={handleUpload}>Upload Image</button>\r\n\r\n      <div>\r\n        {images.map((img) => (\r\n          <div key={img.id}>\r\n            <img\r\n              src={`http://${process.env.REACT_APP_HOST}:8081/${img.path}`}\r\n              alt={img.name}\r\n              width=\"50\"\r\n            />\r\n            <p>{img.name}</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useLocation, useNavigate } from 'react-router-dom'\r\nimport UploadImage from '../UploadImage';\r\nimport axiosClient from '../axiosClient';\r\nimport axios from 'axios';\r\nimport { FaLocationDot } from 'react-icons/fa6';\r\nimport ClipLoader from 'react-spinners/ClipLoader';\r\n\r\nlet nextId = 0;\r\n\r\nexport default function CompelteProfileFrom() {\r\n    //main for connecting backend with Session\r\n    axiosClient.defaults.withCredentials = true;\r\n\r\n    const location = useLocation();\r\n    const state = location.state;\r\n    // console.log(state)\r\n    const data = location.state.data;\r\n    const value = location.state.value;\r\n    const role = value.role;\r\n    const [values, setValues] = useState({\r\n        subadmin_id: data.insertId,\r\n        fullname: value.name,\r\n        phone: value.phone,\r\n        landmark: '',\r\n        role: value.role,\r\n        description: '',\r\n        Reg_id: '',\r\n        OpeningTime: '',\r\n        CloseingTime: '',\r\n        owner_name: '',\r\n        owner_phonenumber: '',\r\n        Village: '',\r\n        P_O: '',\r\n        City: '',\r\n        district: '',\r\n        state: '',\r\n        pin: '',\r\n        SubAdminImageId: null,\r\n        LicenceImageId: null,\r\n        allPinCodes: [],\r\n    })\r\n\r\n    // const [pinCodes, setPinCodes] = useState({\r\n    //     pin_codes:'',\r\n    // })\r\n\r\n    // const [values, setValues] = useState({\r\n    //     // ...other product data fields\r\n    //     productImageId: null, // Initialize as null\r\n    // });\r\n\r\n    // Callback function to set the productImageId when an image is uploaded\r\n    const handleLicenceImageIdUpload = (imageId) => {\r\n        setValues({ ...values, LicenceImageId: imageId });\r\n    };\r\n    const handleImageUpload = (imageId) => {\r\n        setValues({ ...values, SubAdminImageId: imageId });\r\n    };\r\n\r\n    const handleInput = (event) => {\r\n        setValues(prev => ({ ...prev, [event.target.name]: [event.target.value] }))\r\n        // setRole(event.target.value)\r\n    }\r\n\r\n\r\n\r\n    const [pin_code, setPinCode] = useState('');\r\n    const [allPinCodes, setAllPinCodes] = useState([]);\r\n    // console.log(allPinCodes)\r\n\r\n    // const handlePinCodeInput = (event) => {\r\n    //     setPinCodes(prev => ({ ...prev, [event.target.name]: [event.target.value] }))\r\n    //     // setRole(event.target.value)\r\n    // }\r\n\r\n\r\n    const navigate = useNavigate();\r\n    const handleSubmit = async (event) => {\r\n        if (values.OpeningTime[0] === values.CloseingTime[0]) {\r\n            alert(\"Opening Time and Closeing Time Can not be same!!!\");\r\n        } else {\r\n            event.preventDefault();\r\n            axiosClient.post(`/sub_admin/complete_profile`, [values, allPinCodes])\r\n                .then(res => {\r\n                    if (res.data === 'success') {\r\n                        alert('Sign up  Successfully!!');\r\n                        navigate('/sub-admin/login');\r\n                    } else if (res.data === 'success by b2b_employee') {\r\n                        alert('Sub Admin Added  Successfully!!');\r\n                        navigate('/b2b/emp/home', { state: { loggedIn: res.data[1] } });\r\n                    }\r\n                    else if (res.data === 'success by admin') {\r\n                        alert('Sub Admin Added  Successfully!!');\r\n                        navigate('/superadmin', { state: { loggedIn: res.data[1] } });\r\n\r\n                    }\r\n                    else if (res.data === null) {\r\n                        alert('Error')\r\n                    }\r\n                    else {\r\n                        alert('Error')\r\n                    }\r\n                })\r\n                .catch(err => console.log(err));\r\n        }\r\n    }\r\n\r\n    const dateStyle = {\r\n        width: \"13.2rem\",\r\n        height: \"2rem\",\r\n        fontSize: \"1.1rem\",\r\n        width: '90%'\r\n    };\r\n\r\n    const [chooseLocation, setChooseLocation] = useState([])\r\n    const [selectLocation, setSelectLocation] = useState()\r\n    const [locations, setLocation] = useState([])\r\n\r\n\r\n\r\n    const [searchLocation, setSearchLocation] = useState([]);\r\n    const [Loading, setLoading] = useState(false);\r\n\r\n    const [searchValue, setSearchValue] = useState({\r\n        input: ''\r\n    })\r\n\r\n    const [pin, setPin] = useState('');\r\n    const [city, setCity] = useState('');\r\n    // const [state, setState] = useState('');\r\n    const [res, setRes] = useState('');\r\n\r\n    const [loading, setloading] = useState(false);\r\n\r\n    const handleLocationFilter = (event) => {\r\n        setSearchValue(prev => ({ ...prev, [event.target.name]: [event.target.value] }));\r\n        const searchword = event.target.value.toLowerCase();\r\n        if (searchword.length === 6) {\r\n            setloading(true)\r\n            axios.get(`https://api.postalpincode.in/pincode/${searchword}`).then((res) => {\r\n                setRes(res.data);\r\n                // setState(res.data[0].PostOffice[0].State);\r\n                // setCity(res.data[0].PostOffice[0].Name);\r\n                if (res.data[0].PostOffice !== null) {\r\n                    setSearchLocation(res.data[0].PostOffice)\r\n                    setloading(false)\r\n                    // console.log(res.data[0].PostOffice)\r\n                } else {\r\n                    setSearchLocation([]);\r\n                    setLoading(true)\r\n                    setloading(false)\r\n                }\r\n            }).catch((e) => {\r\n                console.log(e);\r\n                setLoading(true)\r\n                setSearchLocation([]);\r\n\r\n            })\r\n        } else {\r\n            setLoading(false)\r\n            setSearchLocation([]);\r\n            setloading(false)\r\n        }\r\n\r\n    };\r\n\r\n    const setLocationValueTOFilter = async (location) => {\r\n        setValues({\r\n            P_O: location.Name,\r\n            district: location.District,\r\n            state: location.Pincode,\r\n            pin: location.Pincode,\r\n        });\r\n        setSearchValue({\r\n            input: location.PinCode,\r\n        });\r\n        setChooseLocation(location.PinCode);\r\n        setSearchLocation([]);\r\n        console.log(location);\r\n        console.log(values)\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"container mt-3\" style={{ display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center' }}>\r\n                <h2 className='p-2' style={{}}>Complete Your Profile <span className='text-info'>{value.name} !!</span> </h2>\r\n                <div className='bg-white m-3 pt-3 pl-2 rounded w-30 shadow' style={{ minWidth: '40vw', height: '110%' }}>\r\n                    <form action='submit' onSubmit={handleSubmit} style={{ padding: '1vw' }}>\r\n                        {/* <h5> <span className='text-info'>Healthhepta</span></h5> */}\r\n\r\n                        <div className='mb-3'>\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" viewBox=\"0 0 16 16\" className='bi bi-person person'>\r\n                                <path d=\"M8 8a3 3 0 1 0 0-6 3 3 0 0 0 0 6Zm2-3a2 2 0 1 1-4 0 2 2 0 0 1 4 0Zm4 8c0 1-1 1-1 1H3s-1 0-1-1 1-4 6-4 6 3 6 4Zm-1-.004c-.001-.246-.154-.986-.832-1.664C11.516 10.68 10.289 10 8 10c-2.29 0-3.516.68-4.168 1.332-.678.678-.83 1.418-.832 1.664h10Z\" />\r\n                            </svg>\r\n                        </div>\r\n                        <div className='complete_profile_divs'>\r\n                            <div className=' p-1' style={{ textAlign: 'initial', fontWeight: '700' }} >\r\n                                <label className='p-1' htmlFor=\"product_name\">Full {role === \"Medicine Shop\" ? <>Pharmacy Shop</> : <></>} {role === 'doctor' ? <>Doctor</> : <></>}{role === \"Laboratory\" ? <>Laboratory</> : <></>}{role === 'clinic' ? <>Clinic</> : <></>} Name :<span className='text-danger'>*</span> : </label><br></br>\r\n                                <input required className='m-2 p-1' type=\"text\" style={{ width: '33vw' }} placeholder='Enter Full Name'\r\n                                    name='fullname' onChange={handleInput} value={value.name} /><br />\r\n                            </div>\r\n                            <div className=' p-1' style={{ textAlign: 'initial', fontWeight: '700' }} >\r\n                                <label className='p-1' htmlFor=\"phone\">Phone No <span className='text-danger'>*</span> : </label><br></br>\r\n                                <input required className='m-2 p-1' type=\"text\" style={{ width: '33vw' }} placeholder='Enter  Phone No '\r\n                                    name='phone' onChange={handleInput} value={value.phone} /><br />\r\n                            </div>\r\n                        </div>\r\n                        <div className='complete_profile_divs'>\r\n                            <div className=' p-1' style={{ textAlign: 'initial', fontWeight: '700' }} >\r\n                                <label className='p-1' htmlFor=\"landmark\">Landmark <span className='text-danger'>*</span> : </label><br></br>\r\n                                <input required className='m-2 p-1' type=\"text\" style={{ width: '33vw' }} placeholder='Enter landmark'\r\n                                    name='landmark' onChange={handleInput} /><br />\r\n                            </div>\r\n                            <div className=' p-1' style={{ textAlign: 'initial', fontWeight: '700' }} >\r\n                                <label className='p-1' htmlFor=\"role\">Role<span className='text-danger'>*</span> : </label><br></br>\r\n                                <input required className='m-2 p-1' type=\"text\" style={{ width: '33vw' }} placeholder='Enter Your Role'\r\n                                    name='role' onChange={handleInput} value={value.role.toUpperCase()} /><br />\r\n                            </div>\r\n                        </div>\r\n                        <div className='complete_profile_divs'>\r\n                            <div className=' p-1' style={{ textAlign: 'initial', fontWeight: '700' }} >\r\n                                <label className='p-1' htmlFor=\"description\">Description <span className='text-danger'>*</span>: </label><br></br>\r\n                                <input required className='m-2 p-1' type=\"text\" style={{ width: '33vw' }} placeholder='Describe Your self'\r\n                                    name='description' onChange={handleInput} /><br />\r\n                            </div>\r\n                            <div className=' p-1' style={{ textAlign: 'initial', fontWeight: '700' }} >\r\n                                <label className='p-1' htmlFor=\"Reg_id\">Registraction Id <span className='text-danger'>*</span>: </label><br></br>\r\n                                <input required className='m-2 p-1' type=\"text\" style={{ width: '33vw' }} placeholder='Enter Your Registraction Id'\r\n                                    name='Reg_id' onChange={handleInput} /><br />\r\n                            </div>\r\n                        </div>\r\n                        <div className='complete_profile_divs'>\r\n                            <div className=' p-1' style={{ textAlign: 'initial', fontWeight: '700' }} >\r\n                                <label className='p-1' htmlFor=\"OpeningTime\">Opening Time <span className='text-danger'>*</span>: </label><br></br>\r\n                                <input required className='m-2 p-1' type=\"time\" style={{ width: '33vw' }} placeholder='Enter Opening Time'\r\n                                    name='OpeningTime' onChange={handleInput} /><br />\r\n                            </div>\r\n                            <div className=' p-1' style={{ textAlign: 'initial', fontWeight: '700' }} >\r\n                                <label className='p-1' htmlFor=\"CloseingTime\">Closing Time <span className='text-danger'>*</span>: </label><br></br>\r\n                                <input required className='m-2 p-1' type=\"time\" style={{ width: '33vw' }} placeholder='Enter  Description'\r\n                                    name='CloseingTime' onChange={handleInput} /><br />\r\n                            </div>\r\n                        </div>\r\n                        <div className='complete_profile_divs'>\r\n                            <div className=' p-1' style={{ textAlign: 'initial', fontWeight: '700' }} >\r\n                                <label className='p-1' htmlFor=\"owner_name\"> {role === \"Medicine Shop\" ? <>Pharmacy Shop Owner</> : <></>} {role === 'doctor' ? <>Doctor</> : <></>}{role === \"Laboratory\" ? <>Laboratory Owner</> : <></>}{role === 'clinic' ? <>Clinic Owner</> : <></>} Name <span className='text-danger'>*</span>: </label><br></br>\r\n                                <input required className='m-2 p-1' type=\"text\" style={{ width: '33vw' }} placeholder='Enter Owner Name'\r\n                                    name='owner_name' onChange={handleInput} /><br />\r\n                            </div>\r\n                            <div className=' p-1' style={{ textAlign: 'initial', fontWeight: '700' }} >\r\n                                <label className='p-1' htmlFor=\"owner_phonenumber\">{role === \"Medicine Shop\" ? <>Pharmacy Shop Owner</> : <></>} {role === 'doctor' ? <>Doctor</> : <></>}{role === \"Laboratory\" ? <>Laboratory Owner</> : <></>}{role === 'clinic' ? <>Clinic Owner</> : <></>}  Phone Number <span className='text-danger'>*</span>: </label><br></br>\r\n                                {/* <input required className='m-2 p-1' type=\"text\" style={{ width: '33vw' }} placeholder='Enter  Owner phone number'\r\n                                    name='owner_phonenumber' onChange={handleInput} /><br /> */}\r\n                                <input\r\n                                    className='m-2 p-1'\r\n                                    onChange={handleInput}\r\n                                    name='owner_phonenumber'\r\n                                    id=\"phone\"\r\n                                    type=\"tel\"\r\n                                    required\r\n                                    pattern=\"[0-9]{3}[0-9]{3}[0-9]{4}\" placeholder=\"Enter  Owner phone number\" style={{ width: '33vw', border: '1px solid gray', borderRadius: '1px' }} />\r\n                                <span className=\"validity\"></span>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div style={{ textAlign: 'left', fontWeight: '700' }}>\r\n                            <label className='m-2 p-3'>Add {role === \"Medicine Shop\" ? <>Pharmacy Shop</> : <></>} {role === 'doctor' ? <>Doctor</> : <></>}{role === \"Laboratory\" ? <>Laboratory</> : <></>}{role === 'clinic' ? <>Clinic</> : <></>} Full Address :- </label>\r\n                            <div className='complete_profile_divs'>\r\n                                <div className=' p-1' style={{ textAlign: 'initial', fontWeight: '700' }} >\r\n                                    <label className='p-1' htmlFor=\"Village\">Village / Road name : </label><br></br>\r\n                                    <input required className='m-2 p-1' type=\"text\" style={{ width: '33vw' }} placeholder='Enter Village or Road Name'\r\n                                        name='Village' onChange={handleInput} /><br />\r\n                                </div>\r\n                                <div className=' p-1' style={{ textAlign: 'initial', fontWeight: '700' }} >\r\n                                    <label className='p-1' htmlFor=\"P_O\">Post Office : </label><br></br>\r\n                                    <input required className='m-2 p-1' type=\"text\" style={{ width: '33vw' }} value={location.Name} placeholder='Enter  Post office'\r\n                                        name='P_O' onChange={handleInput} /><br />\r\n                                </div>\r\n                            </div>\r\n                            <div className='complete_profile_divs'>\r\n                                <div className=' p-1' style={{ textAlign: 'initial', fontWeight: '700' }} >\r\n                                    <label className='p-1' htmlFor=\"City\">City : </label><br></br>\r\n                                    <input required className='m-2 p-1' type=\"text\" style={{ width: '33vw' }} placeholder='Enter Your City'\r\n                                        name='City' onChange={handleInput} /><br />\r\n                                </div>\r\n                                <div className=' p-1' style={{ textAlign: 'initial', fontWeight: '700' }} >\r\n                                    <label className='p-1' htmlFor=\"district\">District : </label><br></br>\r\n                                    <input required className='m-2 p-1' type=\"text\" style={{ width: '33vw' }} value={location.District} placeholder='Enter  District'\r\n                                        name='district' onChange={handleInput} /><br />\r\n                                </div>\r\n                            </div>\r\n                            <div className='complete_profile_divs'>\r\n                                <div className=' p-1' style={{ textAlign: 'initial', fontWeight: '700' }} >\r\n                                    <label className='p-1' htmlFor=\"state\">State: </label><br></br>\r\n                                    <input required className='m-2 p-1' type=\"text\" style={{ width: '33vw' }} value={location.State} placeholder='Enter State'\r\n                                        name='state' onChange={handleInput} /><br />\r\n                                </div>\r\n                                <div className=' p-1' style={{ textAlign: 'initial', fontWeight: '700' }} >\r\n                                    <label className='p-1' htmlFor=\"pin\">Pin Code : </label><br></br>\r\n                                    <input required className='m-2 p-1' type=\"number\" style={{ width: '33vw' }} placeholder='Enter  Pin code'\r\n                                        name='pin' onChange={handleInput} /><br />\r\n                                </div>\r\n\r\n                                {/* <div id='pincode_choose' className=\"\" style={{ width: '90%' }}>\r\n                                    <input className=\"form-control\" style={{ height: '50px' }} name='input' onChange={handleLocationFilter} placeholder=\"Pin Code\" value={searchValue.input} />\r\n\r\n                                    {searchLocation.length !== 0 ? <>\r\n                                        <div className=\"inputResultofmodal\" >\r\n                                            {searchLocation.map((location, index) => {\r\n                                                return <span onClick={() => setLocationValueTOFilter(location)} style={{ textDecoration: 'none', color: 'black' }}  >\r\n                                                    <div style={{ cursor: 'pointer', padding: '15px', margin: '5px', color: 'black', border: '2px solid #fff0d7', display: 'flex', alignItems: 'center' }} key={index}  ><FaLocationDot /> {location.Pincode},{location.Name},{location.State}</div>\r\n                                                </span>\r\n                                            }\r\n                                            )}\r\n                                        </div>\r\n                                    </> : <>\r\n                                    </>}\r\n                                    {loading && <ClipLoader color=\"blue\" />}\r\n                                    {Loading ? <>\r\n                                        <p style={{ padding: '15px' }}>No data found for this pincode!!</p>\r\n                                    </> : <>\r\n                                        <p style={{ padding: '15px' }}>Please type your full Pin Code(6 digit) here!!</p>\r\n\r\n                                    </>\r\n                                    }\r\n                                </div> */}\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div className='complete_profile_divs'>\r\n                            <div className=' p-1' style={{ textAlign: 'initial', fontWeight: '700' }} >\r\n                                <label className='p-1' htmlFor=\"owner_name\"> {role === \"Medicine Shop\" ? <>Enter Served PinCodes</> : <></>}  <span className='text-danger'>*</span>: </label><br></br>\r\n                                {/* <input required className='m-2 p-1' type=\"text\" style={{ width: '33vw' }} placeholder='Enter Owner Name'\r\n                                    name='pin_codes' onChange={handlePinCodeInput} /><br /> */}\r\n                                {/* <h1>Inspiring sculptors:</h1> */}\r\n\r\n                                <input\r\n                                    value={pin_code}\r\n                                    onChange={e => setPinCode(e.target.value)}\r\n                                    className='m-2 p-1' type=\"text\" style={{ width: '33vw' }} placeholder='Enter Served PinCodes'\r\n                                    pattern=\"[0-9]{3}[0-9]{3}\"\r\n                                />\r\n                                {/* <span className=\"validity\"></span> */}\r\n\r\n                                <button type='button' onClick={() => {\r\n                                    allPinCodes.push({\r\n                                        id: nextId++,\r\n                                        pin_code: pin_code,\r\n                                    });\r\n                                    setPinCode('')\r\n                                }} className='btn btn-primary'>Add</button>\r\n                                <ul>\r\n                                    {allPinCodes.map(pin_codes => (\r\n                                        <li key={pin_codes.id}>Pin Code: {pin_codes.pin_code}</li>\r\n                                    ))}\r\n                                </ul>\r\n                                {/* <div className=' p-1' style={{ textAlign: 'initial', fontWeight: '700' }} >\r\n                                <label className='p-1' htmlFor=\"owner_phonenumber\">{role === \"Medicine Shop\" ? <>Pharmacy Shop Owner</> : <></>} {role === 'doctor' ? <>Doctor</> : <></>}{role === \"Laboratory\" ? <>Laboratory Owner</> : <></>}{role === 'clinic' ? <>Clinic Owner</> : <></>}  Phone Number <span className='text-danger'>*</span>: </label><br></br>\r\n                              \r\n                                <input\r\n                                    className='m-2 p-1'\r\n                                    onChange={handleInput}\r\n                                    name='owner_phonenumber'\r\n                                    id=\"phone\"\r\n                                    type=\"tel\"\r\n                                    required\r\n                                    pattern=\"[0-9]{3}[0-9]{3}[0-9]{4}\" placeholder=\"Enter  Owner phone number\" style={{ width: '33vw', border: '1px solid gray', borderRadius: '4px' }} />\r\n                                <span className=\"validity\"></span>\r\n                                <p style={{ fontWeight: '400', marginLeft: '2vw' }}>Format: 1234567890</p>\r\n                            </div> */}\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className='form-check ' style={{ textAlign: 'initial', fontWeight: '700' }} >\r\n                            <label className='p-1' htmlFor=\"image\">Add {role === \"Medicine Shop\" ? <>Pharmacy Shop</> : <></>} {role === 'doctor' ? <>Doctor</> : <></>}{role === \"Laboratory\" ? <>Laboratory</> : <></>}{role === 'clinic' ? <>Clinic</> : <></>}  Image </label>\r\n                            {/* <input className='m-2  p-1' type=\"file\" style={{ width: '90%' }} placeholder='Enter Product image'\r\n                                name='img' onChange={handleInput} /><br /> */}\r\n                            <UploadImage onImageUpload={handleImageUpload} />\r\n                        </div>\r\n                        <div className=\"form-check licence-add\" style={{ textAlign: 'initial', fontWeight: '700' }}>\r\n                            <label className='p-1' htmlFor=\"image\">Add {role === \"Medicine Shop\" ? <>Pharmacy Shop</> : <></>} {role === 'doctor' ? <>Doctor</> : <></>}{role === \"Laboratory\" ? <>Laboratory</> : <></>}{role === 'clinic' ? <>Clinic</> : <></>} Licence</label>\r\n                            {/* <span className='mx-3'><input type=\"file\" name=\"licence\" id=\"licence\" /></span> */}\r\n                            {/* <UploadImage/> */}\r\n                            <UploadImage onImageUpload={handleLicenceImageIdUpload} />\r\n\r\n                        </div>\r\n\r\n                        <div className=\"form-check \">\r\n                            <input required className=\"form-check-input\" type=\"checkbox\" value=\"check\" id=\"flexCheckChecked\" style={{ marginLeft: '1vw' }} />\r\n                            <label className=\"form-check-label\" htmlFor=\"flexCheckChecked\">\r\n                                <p>Please confirm the data are  <span className='text-warning'>right</span> </p>\r\n\r\n                            </label>\r\n                        </div>\r\n                        {/* <Link to='/login'> */}\r\n                        <button type='submit' className='btn  btn-default border p-2 mb-3 btn-info' style={{ width: '40%', color: 'white', cursor: 'pointer' }}>Submit</button>\r\n                        {/* </Link> */}\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n"],"sourceRoot":""}