{"version":3,"sources":["img/loginpageimg.jpg","component/usePasswordToggle.js","component/SignUpValidation.js","component/Service_Provider/Sub_Admin_SignUp.js"],"names":["module","exports","__webpack_require__","p","usePasswordToggle","_useState","useState","_useState2","_slicedToArray","visible","setVisiblity","React","createElement","FaEye","onClick","FaEyeSlash","validation","values","check","error","phone","name","password","Sub_Admin_SignUp","axiosClient","defaults","withCredentials","danger","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","role","useLocation","state","setValues","_useState3","_useState4","setCheck","navigate","useNavigate","_useState5","_useState6","errors","setErrors","handleInput","event","prev","_objectSpread","_defineProperty","target","value","_usePasswordToggle","_usePasswordToggle2","PasswordInputType","ToggleIcon","className","src","img","style","width","alt","height","action","onSubmit","preventDefault","post","then","res","data","success","catch","err","console","log","border","textAlign","fontWeight","htmlFor","required","type","placeholder","onChange","id","pattern","marginLeft","color","cursor","ToastContainer"],"mappings":"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","file":"static/js/31.d370a7aa.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loginpageimg.27e1c41d.jpg\";","import React, { useState } from 'react'\r\nimport { FaEye,FaEyeSlash } from \"react-icons/fa\";\r\nfunction usePasswordToggle() {\r\n    const [visible,setVisiblity] = useState(false);\r\n    const Icon = visible ? <FaEye onClick={()=>setVisiblity(visible=>!visible)} /> : <FaEyeSlash onClick={()=>setVisiblity(visible=>!visible)}/>\r\n    const InputType = visible ? \"text\" : \"password\"\r\n  return [InputType,Icon]\r\n} \r\nexport default usePasswordToggle\r\n","function validation(values,check){\r\n    let error = {}\r\n    if(!check){\r\n        error.check = \"You have to check the permission!\"\r\n    }else{\r\n        error.check = \"\"\r\n    }\r\n    if(values.phone === \"\"){\r\n        error.phone = \"The phone number can not be empty\"\r\n    }\r\n    else{\r\n        error.phone = \"\"\r\n    }\r\n    if(values.name === \"\"){\r\n        error.name = \"The name  can not be empty\"\r\n    }\r\n    else{\r\n        error.name = \"\"\r\n    }\r\n    \r\n    if(values.password === \"\"){\r\n        error.password = \"The password number can not be empty\"\r\n    }\r\n    else{\r\n        error.password = \"\"\r\n    }\r\n    return error;\r\n}\r\nexport default validation;","import React, { useState } from 'react'\r\nimport img from '../../img/loginpageimg.jpg'\r\nimport '../style.css';\r\nimport validation from '../SignUpValidation';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport UploadImage from '../UploadImage';\r\nimport axiosClient from '../axiosClient';\r\nimport usePasswordToggle from '../usePasswordToggle';\r\nexport default function Sub_Admin_SignUp() {\r\n    //main for connecting backend with Session\r\n    axiosClient.defaults.withCredentials = true;\r\n    // const [role,setRole] = useState('')\r\n    const success = () => toast.success('Registraction Successfull', {\r\n        position: \"top-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"light\",\r\n    });;\r\n    const danger = () => toast.error('Registraction Fail ! Phone Number Already Exist ', {\r\n        position: \"top-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"light\",\r\n    });\r\n    //    const handleChange=(e)=>{\r\n    //     setRole(e.target.value)\r\n    //    }\r\n\r\n    const location = useLocation();\r\n    const role = location.state.role\r\n    // console.log(role)\r\n\r\n    const [values, setValues] = useState({\r\n        name: '',\r\n        phone: '',\r\n        password: '',\r\n        role:role\r\n\r\n    })\r\n    \r\n    const [check, setCheck] = useState(false);\r\n    // console.log(check)\r\n    const navigate = useNavigate();\r\n    const [errors, setErrors] = useState({})\r\n    const handleInput = (event) => {\r\n        setValues(prev => ({ ...prev, [event.target.name]: [event.target.value] }))\r\n        // setRole(event.target.value)\r\n    }\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        setErrors(validation(values, check));\r\n        if (errors.name === \"\" && errors.phone === \"\" && errors.password === \"\" && errors.check === \"\") {\r\n            axiosClient.post(`/sub-admin/signup`, values)\r\n                .then(res => {\r\n                    if (res.data === null) {\r\n                        danger();\r\n                    }\r\n                    else if (res.data !== null) {\r\n                        // console.log(res.data)\r\n                        success();\r\n                        navigate('/sub-admin/complete-profile',{\r\n                            state: {\r\n                                data: res.data,\r\n                                value : values\r\n                            }\r\n                        });\r\n                    }\r\n                    else {\r\n                        danger();\r\n                    }\r\n                })\r\n                .catch(err => console.log(err));\r\n        }\r\n    }\r\n\r\n    const [PasswordInputType, ToggleIcon] = usePasswordToggle();\r\n\r\n    return (\r\n\r\n\r\n        <div className='d-flex justify-content-center align-item-center p-3 m-3'>\r\n\r\n            <div className=\"img  login-img\" >\r\n                <img src={img} style={{ width: '38vw' }} alt=\"....\" />\r\n            </div>\r\n            \r\n            <div className='bg-white m-3 pt-3 pl-2 rounded w-30 shadow' style={{ height: '110%' }}>\r\n                <form action='submit' onSubmit={handleSubmit}>\r\n                    <h5>Join <span className='text-info'>Healthhepta</span></h5>\r\n                    <hr style={{border:'3px solid black'}}/>\r\n                    <h5>Registration From <span className='text-info'></span></h5>\r\n\r\n\r\n                    <div className=' p-1' style={{ textAlign: 'initial', fontWeight: '700' }} >\r\n                        <label className='p-1' htmlFor=\"name\">Full Name : </label><br></br>\r\n                        <input required className='m-2 p-1' type=\"text\" style={{ width: '90%' }} placeholder='Enter Full Name'\r\n                            name='name' onChange={handleInput} /><br />\r\n                        {errors.name && <span className='text-danger'>{errors.name}</span>}\r\n                    </div>\r\n                    <div className='p-2' style={{ textAlign: 'initial', fontWeight: '700' }} >\r\n                        <label className='p-2' htmlFor=\"phonenumber\">Phone Number : </label><br></br>\r\n                        <input\r\n                            className='m-2 p-1'\r\n                            onChange={handleInput}\r\n                            name='phone'\r\n                            id=\"phone\"\r\n                            type=\"tel\"\r\n                            required\r\n                            pattern=\"[0-9]{3}[0-9]{3}[0-9]{4}\" placeholder=\"xxxxxxxxxx\" style={{ width: '90%', border: '1px solid black' }} />\r\n                        <span className=\"validity\"></span>\r\n                        <p style={{ fontWeight: '400', marginLeft: '2vw' }}>Format: 1234567890</p>\r\n                    </div>\r\n                    <div className='mb-3 p-1' style={{ textAlign: 'initial', fontWeight: '700',position:'relative' }} >\r\n                        <label className='p-1' htmlFor=\"password\">Create Password : </label>\r\n                        <input required className='m-2  p-1' type={PasswordInputType}  style={{ width: '90%' }} placeholder='Create Password' name='password' onChange={handleInput} /> <br />\r\n                       <br />\r\n                       <span className=\"password-toogle-icon-signup\">{ToggleIcon}</span>\r\n\r\n                        {errors.password && <span className='text-danger'>{errors.password}</span>}\r\n                    </div>\r\n                   \r\n                    <div className=\"form-check \">\r\n                        <input required className=\"form-check-input\" type=\"checkbox\" value=\"check\" id=\"flexCheckChecked\" style={{ marginLeft: '1vw' }} onChange={() => { setCheck(true) }} />\r\n                        <label className=\"form-check-label\" htmlFor=\"flexCheckChecked\">\r\n                            <p>You are agree to our <span className='text-primary'>terms & policies</span> </p>\r\n                            {errors.check && <span className='text-danger'>{errors.check}</span>}\r\n                        </label>\r\n                    </div>\r\n                    {/* <Link to='/login'> */}\r\n                    <button type='submit' className='btn  btn-default border p-2 mb-3 btn-info' style={{ width: '90%', color: 'white', cursor: 'pointer' }}>Sign Up</button>\r\n                    {/* </Link> */}\r\n                </form>\r\n            </div>\r\n            <ToastContainer />\r\n        </div>\r\n    )\r\n}\r\n"],"sourceRoot":""}