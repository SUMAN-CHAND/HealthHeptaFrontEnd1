{"version":3,"sources":["component/AdminPanel/B2BDashboardTabModals/OrderMModal.js"],"names":["customStyles","maxHeight","maxWidth","minWidth","borderRadius","overflow","OrderMModal","_ref","closeTheModal","_useState","useState","_useState2","_slicedToArray","orders","setOrders","useEffect","axiosClient","get","then","response","data","catch","err","console","error","React","createElement","Fragment","style","onClick","marginLeft","className","backgroundColor","display","paddingTop","flexDirection","overflowX","overflowY","height","scope","map","order","index","key","id","product_name","name","role","subadmin_name","order_date","slice","payment_type","payment_status","orderId","post","concat","alert","log","cursor","color","status","orderAcceptedBy","textAlign","fontWeight","expected_delivery_date","Link","to","user_id","product_id","FaRegEdit","width","fill","GrView"],"mappings":"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","file":"static/js/122.ea4fd000.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\r\n\r\nimport {\r\n  Link, useNavigate\r\n} from \"react-router-dom\";\r\nimport axiosClient from '../../axiosClient';\r\nimport { FaRegEdit } from 'react-icons/fa';\r\nimport { GrView } from 'react-icons/gr';\r\n\r\nconst customStyles = {\r\n  maxHeight: '80vh',\r\n  maxWidth: '85vw',\r\n  minWidth: '65vw',\r\n  borderRadius: '5px',\r\n  overflow: 'hidden',\r\n  // background: 'linear-gradient(rgba(250,0,0,-0.5),transparent)',\r\n  // backgroundColor: 'rgb(41 116 132)'\r\n}\r\n\r\n\r\nexport default function OrderMModal({ closeTheModal }) {\r\n  const [orders, setOrders] = useState([]);\r\n\r\n\r\n  useEffect(() => {\r\n    axiosClient.get(`/superadmin/orders/monthly`)\r\n      .then(response => {\r\n        // Handle response\r\n        if (response.data !== null) {\r\n          setOrders(response.data)\r\n        }\r\n      })\r\n      .catch(err => {\r\n        // Handle errors\r\n        console.error(err);\r\n      });\r\n  }, [])\r\n\r\n  const updateStatus = (orderId) => {\r\n    axiosClient.post(`/superadmin/orders/accept/${orderId}`).then(response => {\r\n      if (response.data) {\r\n        alert('Order Accepted');\r\n      }\r\n    }).catch(err => {\r\n      console.log(err)\r\n    })\r\n  }\r\n  const renDataStyle = {\r\n    backgroundColor: 'rgb(237 237 237)',\r\n    display: 'flex',\r\n    paddingTop: '1vh',\r\n    flexDirection: 'column',\r\n    overflowX: 'auto',\r\n    overflowY: 'auto',\r\n    height: '69vh'\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      <div style={customStyles}>\r\n        <button onClick={closeTheModal} style={{ marginLeft: '95%', borderRadius: '50%' }} className='my-1 btn btn-dark close-btn'>X</button>\r\n\r\n        <div >\r\n              <h2 className='p-2'>|| Monthly Purchase ||</h2>\r\n              <div className=\"container text-dark \" style={renDataStyle}>\r\n                <table className=\"table table-striped\">\r\n                  <thead className='thead-dark'>\r\n                    <tr>\r\n                      <th scope=\"col\">Count</th>\r\n                      <th scope=\"col\">OrderId</th>\r\n                      <th scope=\"col\">Product Name</th>\r\n                      <th scope=\"col\">Coustomer Name</th>\r\n                      <th scope=\"col\">User Role</th>\r\n                      <th scope=\"col\">Order From</th>\r\n                      <th scope=\"col\">Date</th>\r\n                      <th scope=\"col\">Payment Mood</th>\r\n                      <th scope=\"col\">Payment Status</th>\r\n                      <th scope=\"col\">Status</th>\r\n                      <th scope=\"col\">Expected delivery date</th>\r\n                      <th scope=\"col\">Action</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {orders && orders.map((order, index) => (\r\n                      <tr key={index}>\r\n                        <th scope=\"row\">{index + 1}</th>\r\n                        <th scope=\"row\">{order.id}</th>\r\n                        <td>{order.product_name}</td>\r\n                        <td>{order.name}</td>\r\n                        <td>{order.role}</td>\r\n                        {/* <td>{order.order_date}</td> */}\r\n                        <td>{order.subadmin_name}</td>\r\n                        <td>{order.order_date.slice(0, 10)}</td>\r\n                        <td>{order.payment_type}</td>\r\n                        <td>{order.payment_status}</td>\r\n                        <td onClick={() => updateStatus(order.id)} style={{ cursor: 'pointer', color: 'blue' }} >{order.status} <br />{order.orderAcceptedBy}</td>\r\n                        <td>\r\n                          <div className=' p-1' style={{ textAlign: 'initial', fontWeight: '700' }} >\r\n                            {order.expected_delivery_date}\r\n                            <br />\r\n                          </div>\r\n                        </td>\r\n                        <td className='flex items-center justify-center'>\r\n                          <Link to={`/superadmin/orders/action/${order.id}/${order.user_id}/${order.product_id}`}><FaRegEdit style={{ width: '2vw', height: '2vh', fill: '#ffc107' }} /></Link>\r\n                          <Link to={`/superadmin/orders/${order.id}/${order.user_id}/${order.product_id}`}><GrView className='text-primary' style={{ width: '2vw', height: '2vh', fill: 'blue' }} /></Link>\r\n                        </td>\r\n                      </tr>\r\n                    ))}\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n"],"sourceRoot":""}