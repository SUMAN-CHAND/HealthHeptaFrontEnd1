{"version":3,"sources":["component/Service_Provider/LabPaymentCompleteActionBySub_Admin.js"],"names":["LabPaymentCompleteActionBySub_Admin","axiosClient","defaults","withCredentials","_useState","useState","_useState2","_slicedToArray","payment","setPayment","labtest_id","useParams","id","useEffect","get","concat","then","res","data","alert","catch","err","console","log","_useState3","payment_status","_useState4","values","setValues","navigate","useNavigate","_defineProperty","width","height","fontSize","React","createElement","className","style","display","flexDirection","justifyContent","alignItems","backgroundColor","minWidth","action","onSubmit","event","preventDefault","post","state","loggedIn","padding","marginLeft","payment_id","labbooking_id","total_amount","payment_type","textAlign","fontWeight","htmlFor","required","onChange","prev","_objectSpread","target","name","value","cursor","type","color"],"mappings":"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","file":"static/js/112.2b31bb0b.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport axiosClient from '../axiosClient';\r\nexport default function LabPaymentCompleteActionBySub_Admin() {\r\n    //main for connecting backend with Session\r\n    axiosClient.defaults.withCredentials = true;\r\n    const [payment, setPayment] = useState([]);\r\n    // const [deliveryPartners, setDeliveryPartner] = useState([]);\r\n    const param = useParams();\r\n    var labtest_id = param.id;\r\n    useEffect(() => {\r\n        axiosClient.get(`/superadmin/payment/lab/status/${labtest_id}`)\r\n            .then(res => {\r\n                // console.log(res.data)\r\n                if (res.data !== null) {\r\n                    setPayment(res.data[0]);\r\n                }\r\n                if (res.data == null) {\r\n                    alert(\"Server error!!\");\r\n                }\r\n\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            })\r\n    }, [])\r\n    // useEffect(() => {\r\n    //     axiosClient.get(`/superadmin/delivery_partner`)\r\n    //         .then(response => {\r\n    //             // Handle response\r\n    //             setDeliveryPartner(response.data)\r\n    //         })\r\n    //         .catch(err => {\r\n    //             // Handle errors\r\n    //             console.error(err);\r\n    //         });\r\n    // }, [])\r\n    // console.log(order)\r\n\r\n    const [values, setValues] = useState({\r\n        labtest_id: labtest_id,\r\n        payment_status: '',\r\n\r\n    })\r\n    const handleInput = (event) => {\r\n        setValues(prev => ({ ...prev, [event.target.name]: [event.target.value] }))\r\n    }\r\n    const navigate = useNavigate();\r\n    const handleSubmit = (event) => {\r\n        console.log(values)\r\n        event.preventDefault();\r\n        axiosClient.post(`/sub-admin/update/lab/payment`, values)\r\n            .then(res => {\r\n                if (res.data === 'success') {\r\n                    alert('Payment  status updated Successfully!!')\r\n                    navigate('/sub-admin/home', { state: { loggedIn: true } });\r\n                }\r\n                else if (res.data === null) {\r\n                    alert('Error')\r\n                }\r\n                else {\r\n                    alert('Error')\r\n                }\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n    // const expected_delivery_date = {order && order.expected_delivery_date.slice(0, 10)};\r\n    const dateStyle = {\r\n        width: \"13.2rem\",\r\n        height: \"2rem\",\r\n        fontSize: \"1.1rem\",\r\n        width: '90%'\r\n    };\r\n    return (\r\n        <div>\r\n            <div className=\"container mt-3\" style={{ display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center' }}>\r\n                <h2 className='p-2' style={{ backgroundColor: 'aqua' }}>||Update Payment Details||</h2>\r\n                <div className='bg-white m-3 pt-3 pl-2 rounded w-30 shadow' style={{ minWidth: '40vw', height: '110%' }}>\r\n                    <form action='submit' onSubmit={handleSubmit} style={{ padding: '1vw' }}>\r\n                        <h4> <span className='text-info'>Healthhepta</span></h4>\r\n                        <div style={{ display: 'flex', alignItems: 'flex-start', flexDirection: 'column', marginLeft: '5vw' }}>\r\n                            <h5 className=\"font-size-15\">PaymentNo: {payment && payment.payment_id} <span className=\"badge bg-success font-size-12 ms-2\">{payment && payment.payment_status}</span></h5>\r\n                            <h5 className=\"font-size-15\">Lab Booking No: {payment && payment.labbooking_id} </h5>\r\n                            <h5 className=\"font-size-15\">Total Amount: {payment && payment.total_amount} </h5>\r\n                            <h5 className=\"font-size-15\">Payment Type: {payment && payment.payment_type} </h5>\r\n                        </div>\r\n                        <div className=' p-1' style={{ textAlign: 'initial', fontWeight: '700' }} >\r\n                            <label className='p-1' htmlFor=\"orderstatus\">Change Payment Status: </label>\r\n                            <br />\r\n                            <select\r\n                                className='m-2 p-1'\r\n                                required\r\n                                onChange={handleInput}\r\n                                name='payment_status'\r\n                                style={{ width: '90%', cursor: 'pointer' }}>\r\n                                <option value=\"select\">{payment.payment_status}</option>\r\n                                <option value=\"completed\">Completed</option>\r\n                            </select><br />\r\n                        </div>\r\n                        <div className=\"form-check \">\r\n                            <input required className=\"form-check-input\" type=\"checkbox\" value=\"check\" id=\"flexCheckChecked\" style={{ marginLeft: '1vw' }} />\r\n                            <label className=\"form-check-label\" htmlFor=\"flexCheckChecked\">\r\n                                <p>You are sure to complete  <span className='text-warning'>Payment</span> </p>\r\n                            </label>\r\n                        </div>\r\n                        <button type='submit' className='btn  btn-default border p-2 mb-3 btn-info' style={{ width: '90%', color: 'white', cursor: 'pointer' }}>Submit</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n"],"sourceRoot":""}