{"version":3,"sources":["component/Delivery_Partner/Delivery_Partner_Login.js","img/loginpageimg.jpg","component/usePasswordToggle.js","component/LoginValidaation.js"],"names":["Delivery_Partner_Login","axiosClient","defaults","withCredentials","_useState","useState","ph_num","password","_useState2","_slicedToArray","values","setValues","navigate","useNavigate","_useState3","_useState4","errors","setErrors","handleInput","event","prev","_objectSpread","_defineProperty","target","name","value","_usePasswordToggle","usePasswordToggle","_usePasswordToggle2","PasswordInputType","ToggleIcon","React","createElement","className","src","img","style","width","alt","height","action","onSubmit","preventDefault","validation","post","then","res","data","toast","error","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","alert","success","state","loggedIn","catch","err","console","log","textAlign","fontWeight","htmlFor","onChange","id","type","required","pattern","placeholder","border","color","backgroundColor","Fragment","Link","to","borderRadius","ToastContainer","module","exports","__webpack_require__","p","visible","setVisiblity","FaEye","onClick","FaEyeSlash","phone"],"mappings":"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","file":"static/js/84.5da19b10.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport img from '../../img/loginpageimg.jpg'\r\nimport '../style.css';\r\nimport { Link } from 'react-router-dom';\r\nimport validation from '../LoginValidaation';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport axiosClient from '../axiosClient';\r\nimport usePasswordToggle from '../usePasswordToggle';\r\nexport default function Delivery_Partner_Login() {\r\n    //main for connecting backend with Session\r\n    axiosClient.defaults.withCredentials = true;\r\n    const success = () => toast.success('Login Successfull', {\r\n        position: \"top-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"light\",\r\n    });;\r\n    const danger = () => toast.error('Login Fail ! Phone Number Or Password dose not match ', {\r\n        position: \"top-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"light\",\r\n    });\r\n    const [values, setValues] = useState({\r\n        ph_num: '',\r\n        password: ''\r\n    })\r\n    const navigate = useNavigate();\r\n\r\n    const [errors, setErrors] = useState([])\r\n    const handleInput = (event) => {\r\n        setValues(prev => ({ ...prev, [event.target.name]: [event.target.value] }))\r\n    }\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        setErrors(validation(values));\r\n            const user = axiosClient\r\n            .post(`/delivery_partner/login`, values)\r\n                .then(res => {\r\n                    if (res.data === null) {\r\n                        danger();\r\n                    }\r\n                    else if (res.data === 'Not_Approve') {\r\n                        alert(\"Your Profile Not Verified by Admin || Please Wait for 24 hr Or Connect with Healthhepta.com \")\r\n                    }\r\n                    else if (res.data[0] !== null) {\r\n                        success();\r\n                        navigate('/delivery-partner/home', { state: { loggedIn: res.data[1] } });\r\n                    }\r\n                })\r\n                .catch(err => console.log(err));\r\n    }\r\n    const [PasswordInputType, ToggleIcon] = usePasswordToggle();\r\n    return (\r\n        <div className='d-flex justify-content-center align-item-center p-3 m-3'>\r\n            <div className=\"img login-img\" >\r\n                <img src={img} style={{ width: '38vw' }} alt=\"....\" />\r\n            </div>\r\n            <div className='bg-white m-3 pt-3 pl-2 rounded w-30 shadow' style={{ height: '110%' }}>\r\n                <form action='submit' onSubmit={handleSubmit}>\r\n                    <h5>Log in to <span className='text-info'>Healthhepta</span></h5>\r\n                    <div className='p-2' style={{ textAlign: 'initial', fontWeight: '700' }} >\r\n                        <label className='p-2' htmlFor=\"phonenumber\">Phone Number : </label><br></br>\r\n                        <input\r\n                            className='m-2 p-1'\r\n                            onChange={handleInput}\r\n                            name='ph_num'\r\n                            id=\"phone\"\r\n                            type=\"tel\"\r\n                            required\r\n                            pattern=\"[0-9]{3}[0-9]{3}[0-9]{4}\" placeholder=\"xxxxxxxxxx\" style={{ width: '90%', border: '1px solid black' }} />\r\n                        <span className=\"validity\"></span>\r\n                    </div>\r\n                    <div className='mb-3 p-2' style={{ textAlign: 'initial', fontWeight: '700' ,position:'relative'}} >\r\n                        <label className='p-2' htmlFor=\"password\">Password : </label>\r\n                        <input required className='m-2  p-1' type={PasswordInputType}  style={{ width: '90%' }} name='password' placeholder='Enter Password' onChange={handleInput} />\r\n                        <br />\r\n                        <span className=\"password-toogle-icon\">{ToggleIcon}</span>\r\n\r\n                        {errors.password && <span className='text-danger'>{errors.password}</span>}\r\n                    </div>\r\n                    <button type='submit' className='btn' style={{ width: '90%', color: 'white', backgroundColor: '#6775ec' }}>Log In</button>\r\n                    <p >You are agree to our <span className='text-primary'>terms & policies</span> </p>\r\n                    <p className='px-2'>Do not have any account please  <span className='text-primary'>create an Account</span> </p>\r\n                    <>\r\n                    <Link to='/delivery-partner/signup'> <button className='  btn-default border p-2 mb-3 btnonhover' style={{ borderRadius: '5px', width: '90%' }}>Create Account</button></Link>\r\n                    </>\r\n                </form>\r\n            </div>\r\n            <ToastContainer />\r\n        </div>\r\n    )\r\n}\r\n","module.exports = __webpack_public_path__ + \"static/media/loginpageimg.27e1c41d.jpg\";","import React, { useState } from 'react'\r\nimport { FaEye,FaEyeSlash } from \"react-icons/fa\";\r\nfunction usePasswordToggle() {\r\n    const [visible,setVisiblity] = useState(false);\r\n    const Icon = visible ? <FaEye onClick={()=>setVisiblity(visible=>!visible)} /> : <FaEyeSlash onClick={()=>setVisiblity(visible=>!visible)}/>\r\n    const InputType = visible ? \"text\" : \"password\"\r\n  return [InputType,Icon]\r\n} \r\nexport default usePasswordToggle\r\n","function validation(values){\r\n    let error = {}\r\n    \r\n    if(values.phone === \"\"){\r\n        error.phone = \"The phone number can not be empty\"\r\n    }\r\n   \r\n    else{\r\n        error.phone = \"\"\r\n    }\r\n    \r\n    if(values.password === \"\"){\r\n        error.password = \"The password number can not be empty\"\r\n    }\r\n   \r\n    else{\r\n        error.password = \"\"\r\n    }\r\n    return error;\r\n\r\n}\r\nexport default validation;"],"sourceRoot":""}