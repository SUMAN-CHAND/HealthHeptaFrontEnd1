{"version":3,"sources":["component/ChoosePinCodeModal.js"],"names":["_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","ChoosePinCodeModal","_ref","onHide","_useState","useState","_useState2","_slicedToArray","setChooseLocation","_useState3","_useState4","_useState5","_useState6","locations","setLocation","useEffect","axiosClient","get","res","data","_useState7","_useState8","searchLocation","setSearchLocation","_useState9","input","_useState10","searchValue","setSearchValue","setLocationValueTOFilter","_ref2","_asyncToGenerator","_callee","pin_code","_context","sessionStorage","setItem","_x","apply","arguments","React","createElement","className","style","width","height","onChange","event","_objectSpread","_defineProperty","target","searchword","toLowerCase","filtered","filter","item","toString","search","includes","placeholder","Fragment","map","location","index","onClick","textDecoration","color","cursor","padding","margin","border","display","alignItems","FaLocationDot","City"],"mappings":"uNACAA,EAAA,kBAAAC,GAAA,IAAAA,EAAA,GAAAC,EAAAC,OAAAC,UAAAC,EAAAH,EAAAI,eAAAC,EAAAJ,OAAAI,gBAAA,SAAAC,EAAAC,EAAAC,GAAAF,EAAAC,GAAAC,EAAAC,OAAAC,EAAA,mBAAAC,cAAA,GAAAC,EAAAF,EAAAG,UAAA,aAAAC,EAAAJ,EAAAK,eAAA,kBAAAC,EAAAN,EAAAO,aAAA,yBAAAC,EAAAZ,EAAAC,EAAAE,GAAA,OAAAR,OAAAI,eAAAC,EAAAC,EAAA,CAAAE,QAAAU,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAf,EAAAC,GAAA,IAAAW,EAAA,aAAAI,GAAAJ,EAAA,SAAAZ,EAAAC,EAAAE,GAAA,OAAAH,EAAAC,GAAAE,GAAA,SAAAc,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,KAAAvB,qBAAA2B,EAAAJ,EAAAI,EAAAC,EAAA7B,OAAA8B,OAAAH,EAAA1B,WAAA8B,EAAA,IAAAC,EAAAN,GAAA,WAAAtB,EAAAyB,EAAA,WAAArB,MAAAyB,EAAAV,EAAAE,EAAAM,KAAAF,EAAA,SAAAK,EAAAC,EAAA9B,EAAA+B,GAAA,WAAAC,KAAA,SAAAD,IAAAD,EAAAG,KAAAjC,EAAA+B,IAAA,MAAAf,GAAA,OAAAgB,KAAA,QAAAD,IAAAf,IAAAvB,EAAAwB,OAAA,IAAAiB,EAAA,YAAAX,KAAA,SAAAY,KAAA,SAAAC,KAAA,IAAAC,EAAA,GAAAzB,EAAAyB,EAAA/B,EAAA,kBAAAgC,OAAA,IAAAC,EAAA5C,OAAA6C,eAAAC,EAAAF,OAAAG,EAAA,MAAAD,OAAA/C,GAAAG,EAAAoC,KAAAQ,EAAAnC,KAAA+B,EAAAI,GAAA,IAAAE,EAAAP,EAAAxC,UAAA2B,EAAA3B,UAAAD,OAAA8B,OAAAY,GAAA,SAAAO,EAAAhD,GAAA,0BAAAiD,QAAA,SAAAC,GAAAlC,EAAAhB,EAAAkD,EAAA,SAAAf,GAAA,OAAAO,KAAAS,QAAAD,EAAAf,OAAA,SAAAiB,EAAAxB,EAAAyB,GAAA,IAAAC,EAAAnD,EAAAuC,KAAA,WAAAnC,MAAA,SAAA2C,EAAAf,GAAA,SAAAoB,IAAA,WAAAF,EAAA,SAAAG,EAAAC,IAAA,SAAAC,EAAAR,EAAAf,EAAAqB,EAAAC,GAAA,IAAAE,EAAA1B,EAAAL,EAAAsB,GAAAtB,EAAAO,GAAA,aAAAwB,EAAAvB,KAAA,KAAAwB,EAAAD,EAAAxB,IAAA5B,EAAAqD,EAAArD,MAAA,OAAAA,GAAA,iBAAAA,GAAAN,EAAAoC,KAAA9B,EAAA,WAAA8C,EAAAG,QAAAjD,EAAAsD,SAAAC,KAAA,SAAAvD,GAAAmD,EAAA,OAAAnD,EAAAiD,EAAAC,IAAA,SAAArC,GAAAsC,EAAA,QAAAtC,EAAAoC,EAAAC,KAAAJ,EAAAG,QAAAjD,GAAAuD,KAAA,SAAAC,GAAAH,EAAArD,MAAAwD,EAAAP,EAAAI,IAAA,SAAAI,GAAA,OAAAN,EAAA,QAAAM,EAAAR,EAAAC,OAAAE,EAAAxB,KAAAuB,CAAAR,EAAAf,EAAAqB,EAAAC,KAAA,OAAAH,MAAAQ,KAAAP,YAAA,SAAAvB,EAAAV,EAAAE,EAAAM,GAAA,IAAAmC,EAAA,iCAAAf,EAAAf,GAAA,iBAAA8B,EAAA,UAAAC,MAAA,iDAAAD,EAAA,cAAAf,EAAA,MAAAf,EAAA,OAAAgC,IAAA,IAAArC,EAAAoB,SAAApB,EAAAK,QAAA,KAAAiC,EAAAtC,EAAAsC,SAAA,GAAAA,EAAA,KAAAC,EAAAC,EAAAF,EAAAtC,GAAA,GAAAuC,EAAA,IAAAA,IAAA/B,EAAA,gBAAA+B,GAAA,YAAAvC,EAAAoB,OAAApB,EAAAyC,KAAAzC,EAAA0C,MAAA1C,EAAAK,SAAA,aAAAL,EAAAoB,OAAA,uBAAAe,EAAA,MAAAA,EAAA,YAAAnC,EAAAK,IAAAL,EAAA2C,kBAAA3C,EAAAK,SAAA,WAAAL,EAAAoB,QAAApB,EAAA4C,OAAA,SAAA5C,EAAAK,KAAA8B,EAAA,gBAAAN,EAAA1B,EAAAX,EAAAE,EAAAM,GAAA,cAAA6B,EAAAvB,KAAA,IAAA6B,EAAAnC,EAAA6C,KAAA,6BAAAhB,EAAAxB,MAAAG,EAAA,gBAAA/B,MAAAoD,EAAAxB,IAAAwC,KAAA7C,EAAA6C,MAAA,UAAAhB,EAAAvB,OAAA6B,EAAA,YAAAnC,EAAAoB,OAAA,QAAApB,EAAAK,IAAAwB,EAAAxB,OAAA,SAAAmC,EAAAF,EAAAtC,GAAA,IAAA8C,EAAA9C,EAAAoB,SAAAkB,EAAAzD,SAAAiE,GAAA,QAAAC,IAAA3B,EAAA,OAAApB,EAAAsC,SAAA,eAAAQ,GAAAR,EAAAzD,SAAAmE,SAAAhD,EAAAoB,OAAA,SAAApB,EAAAK,SAAA0C,EAAAP,EAAAF,EAAAtC,GAAA,UAAAA,EAAAoB,SAAA,WAAA0B,IAAA9C,EAAAoB,OAAA,QAAApB,EAAAK,IAAA,IAAA4C,UAAA,oCAAAH,EAAA,aAAAtC,EAAA,IAAAqB,EAAA1B,EAAAiB,EAAAkB,EAAAzD,SAAAmB,EAAAK,KAAA,aAAAwB,EAAAvB,KAAA,OAAAN,EAAAoB,OAAA,QAAApB,EAAAK,IAAAwB,EAAAxB,IAAAL,EAAAsC,SAAA,KAAA9B,EAAA,IAAA0C,EAAArB,EAAAxB,IAAA,OAAA6C,IAAAL,MAAA7C,EAAAsC,EAAAa,YAAAD,EAAAzE,MAAAuB,EAAAoD,KAAAd,EAAAe,QAAA,WAAArD,EAAAoB,SAAApB,EAAAoB,OAAA,OAAApB,EAAAK,SAAA0C,GAAA/C,EAAAsC,SAAA,KAAA9B,GAAA0C,GAAAlD,EAAAoB,OAAA,QAAApB,EAAAK,IAAA,IAAA4C,UAAA,oCAAAjD,EAAAsC,SAAA,KAAA9B,GAAA,SAAA8C,EAAAC,GAAA,IAAAC,EAAA,CAAAC,OAAAF,EAAA,SAAAA,IAAAC,EAAAE,SAAAH,EAAA,SAAAA,IAAAC,EAAAG,WAAAJ,EAAA,GAAAC,EAAAI,SAAAL,EAAA,IAAA3C,KAAAiD,WAAAC,KAAAN,GAAA,SAAAO,EAAAP,GAAA,IAAA3B,EAAA2B,EAAAQ,YAAA,GAAAnC,EAAAvB,KAAA,gBAAAuB,EAAAxB,IAAAmD,EAAAQ,WAAAnC,EAAA,SAAA5B,EAAAN,GAAAiB,KAAAiD,WAAA,EAAAJ,OAAA,SAAA9D,EAAAwB,QAAAmC,EAAA1C,WAAAqD,OAAA,YAAAjD,EAAAkD,GAAA,GAAAA,EAAA,KAAAC,EAAAD,EAAAtF,GAAA,GAAAuF,EAAA,OAAAA,EAAA5D,KAAA2D,GAAA,sBAAAA,EAAAd,KAAA,OAAAc,EAAA,IAAAE,MAAAF,EAAAG,QAAA,KAAAC,GAAA,EAAAlB,EAAA,SAAAA,IAAA,OAAAkB,EAAAJ,EAAAG,QAAA,GAAAlG,EAAAoC,KAAA2D,EAAAI,GAAA,OAAAlB,EAAA3E,MAAAyF,EAAAI,GAAAlB,EAAAP,MAAA,EAAAO,EAAA,OAAAA,EAAA3E,WAAAsE,EAAAK,EAAAP,MAAA,EAAAO,GAAA,OAAAA,UAAA,OAAAA,KAAAf,GAAA,SAAAA,IAAA,OAAA5D,WAAAsE,EAAAF,MAAA,UAAApC,EAAAvC,UAAAwC,EAAArC,EAAA4C,EAAA,eAAAxC,MAAAiC,EAAAtB,cAAA,IAAAf,EAAAqC,EAAA,eAAAjC,MAAAgC,EAAArB,cAAA,IAAAqB,EAAA8D,YAAArF,EAAAwB,EAAA1B,EAAA,qBAAAjB,EAAAyG,oBAAA,SAAAC,GAAA,IAAAC,EAAA,mBAAAD,KAAAE,YAAA,QAAAD,QAAAjE,GAAA,uBAAAiE,EAAAH,aAAAG,EAAAE,QAAA7G,EAAA8G,KAAA,SAAAJ,GAAA,OAAAxG,OAAA6G,eAAA7G,OAAA6G,eAAAL,EAAA/D,IAAA+D,EAAAM,UAAArE,EAAAxB,EAAAuF,EAAAzF,EAAA,sBAAAyF,EAAAvG,UAAAD,OAAA8B,OAAAkB,GAAAwD,GAAA1G,EAAAiH,MAAA,SAAA3E,GAAA,OAAA0B,QAAA1B,IAAAa,EAAAI,EAAApD,WAAAgB,EAAAoC,EAAApD,UAAAY,EAAA,kBAAA8B,OAAA7C,EAAAuD,gBAAAvD,EAAAkH,MAAA,SAAAzF,EAAAC,EAAAC,EAAAC,EAAA4B,QAAA,IAAAA,MAAA2D,SAAA,IAAAC,EAAA,IAAA7D,EAAA/B,EAAAC,EAAAC,EAAAC,EAAAC,GAAA4B,GAAA,OAAAxD,EAAAyG,oBAAA/E,GAAA0F,IAAA/B,OAAApB,KAAA,SAAAF,GAAA,OAAAA,EAAAe,KAAAf,EAAArD,MAAA0G,EAAA/B,UAAAlC,EAAAD,GAAA/B,EAAA+B,EAAAjC,EAAA,aAAAE,EAAA+B,EAAArC,EAAA,kBAAAgC,OAAA1B,EAAA+B,EAAA,mDAAAlD,EAAAqH,KAAA,SAAAC,GAAA,IAAAC,EAAArH,OAAAoH,GAAAD,EAAA,WAAA7G,KAAA+G,EAAAF,EAAAtB,KAAAvF,GAAA,OAAA6G,EAAAG,UAAA,SAAAnC,IAAA,KAAAgC,EAAAf,QAAA,KAAA9F,EAAA6G,EAAAI,MAAA,GAAAjH,KAAA+G,EAAA,OAAAlC,EAAA3E,MAAAF,EAAA6E,EAAAP,MAAA,EAAAO,EAAA,OAAAA,EAAAP,MAAA,EAAAO,IAAArF,EAAAiD,SAAAf,EAAA/B,UAAA,CAAAyG,YAAA1E,EAAAgE,MAAA,SAAAwB,GAAA,GAAA7E,KAAA8E,KAAA,EAAA9E,KAAAwC,KAAA,EAAAxC,KAAA6B,KAAA7B,KAAA8B,WAAAK,EAAAnC,KAAAiC,MAAA,EAAAjC,KAAA0B,SAAA,KAAA1B,KAAAQ,OAAA,OAAAR,KAAAP,SAAA0C,EAAAnC,KAAAiD,WAAA1C,QAAA4C,IAAA0B,EAAA,QAAAb,KAAAhE,KAAA,MAAAgE,EAAAe,OAAA,IAAAxH,EAAAoC,KAAAK,KAAAgE,KAAAR,OAAAQ,EAAAgB,MAAA,MAAAhF,KAAAgE,QAAA7B,IAAA8C,KAAA,WAAAjF,KAAAiC,MAAA,MAAAiD,EAAAlF,KAAAiD,WAAA,GAAAG,WAAA,aAAA8B,EAAAxF,KAAA,MAAAwF,EAAAzF,IAAA,OAAAO,KAAAmF,MAAApD,kBAAA,SAAAqD,GAAA,GAAApF,KAAAiC,KAAA,MAAAmD,EAAA,IAAAhG,EAAAY,KAAA,SAAAqF,EAAAC,EAAAC,GAAA,OAAAtE,EAAAvB,KAAA,QAAAuB,EAAAxB,IAAA2F,EAAAhG,EAAAoD,KAAA8C,EAAAC,IAAAnG,EAAAoB,OAAA,OAAApB,EAAAK,SAAA0C,KAAAoD,EAAA,QAAA7B,EAAA1D,KAAAiD,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA5C,KAAAiD,WAAAS,GAAAzC,EAAA2B,EAAAQ,WAAA,YAAAR,EAAAC,OAAA,OAAAwC,EAAA,UAAAzC,EAAAC,QAAA7C,KAAA8E,KAAA,KAAAU,EAAAjI,EAAAoC,KAAAiD,EAAA,YAAA6C,EAAAlI,EAAAoC,KAAAiD,EAAA,iBAAA4C,GAAAC,EAAA,IAAAzF,KAAA8E,KAAAlC,EAAAE,SAAA,OAAAuC,EAAAzC,EAAAE,UAAA,MAAA9C,KAAA8E,KAAAlC,EAAAG,WAAA,OAAAsC,EAAAzC,EAAAG,iBAAA,GAAAyC,GAAA,GAAAxF,KAAA8E,KAAAlC,EAAAE,SAAA,OAAAuC,EAAAzC,EAAAE,UAAA,YAAA2C,EAAA,UAAAjE,MAAA,6CAAAxB,KAAA8E,KAAAlC,EAAAG,WAAA,OAAAsC,EAAAzC,EAAAG,gBAAAf,OAAA,SAAAtC,EAAAD,GAAA,QAAAiE,EAAA1D,KAAAiD,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA5C,KAAAiD,WAAAS,GAAA,GAAAd,EAAAC,QAAA7C,KAAA8E,MAAAvH,EAAAoC,KAAAiD,EAAA,eAAA5C,KAAA8E,KAAAlC,EAAAG,WAAA,KAAA2C,EAAA9C,EAAA,OAAA8C,IAAA,UAAAhG,GAAA,aAAAA,IAAAgG,EAAA7C,QAAApD,MAAAiG,EAAA3C,aAAA2C,EAAA,UAAAzE,EAAAyE,IAAAtC,WAAA,UAAAnC,EAAAvB,OAAAuB,EAAAxB,MAAAiG,GAAA1F,KAAAQ,OAAA,OAAAR,KAAAwC,KAAAkD,EAAA3C,WAAAnD,GAAAI,KAAA2F,SAAA1E,IAAA0E,SAAA,SAAA1E,EAAA+B,GAAA,aAAA/B,EAAAvB,KAAA,MAAAuB,EAAAxB,IAAA,gBAAAwB,EAAAvB,MAAA,aAAAuB,EAAAvB,KAAAM,KAAAwC,KAAAvB,EAAAxB,IAAA,WAAAwB,EAAAvB,MAAAM,KAAAmF,KAAAnF,KAAAP,IAAAwB,EAAAxB,IAAAO,KAAAQ,OAAA,SAAAR,KAAAwC,KAAA,kBAAAvB,EAAAvB,MAAAsD,IAAAhD,KAAAwC,KAAAQ,GAAApD,GAAAgG,OAAA,SAAA7C,GAAA,QAAAW,EAAA1D,KAAAiD,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA5C,KAAAiD,WAAAS,GAAA,GAAAd,EAAAG,eAAA,OAAA/C,KAAA2F,SAAA/C,EAAAQ,WAAAR,EAAAI,UAAAG,EAAAP,GAAAhD,IAAAiG,MAAA,SAAAhD,GAAA,QAAAa,EAAA1D,KAAAiD,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA5C,KAAAiD,WAAAS,GAAA,GAAAd,EAAAC,WAAA,KAAA5B,EAAA2B,EAAAQ,WAAA,aAAAnC,EAAAvB,KAAA,KAAAoG,EAAA7E,EAAAxB,IAAA0D,EAAAP,GAAA,OAAAkD,GAAA,UAAAtE,MAAA,0BAAAuE,cAAA,SAAAzC,EAAAf,EAAAE,GAAA,OAAAzC,KAAA0B,SAAA,CAAAzD,SAAAmC,EAAAkD,GAAAf,aAAAE,WAAA,SAAAzC,KAAAQ,SAAAR,KAAAP,SAAA0C,GAAAvC,IAAAzC,EAIe,SAAS6I,EAAkBC,GAAa,IAAVC,EAAMD,EAANC,OAoEzCC,EAE4CC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAAjCI,GAAFF,EAAA,GAAmBA,EAAA,IAAAG,EACIJ,qBAAUK,EAAAH,YAAAE,EAAA,GAAdE,GAAnBD,EAAA,GAAmBA,EAAA,GACPL,mBAAS,KAAGO,EAAAL,YAAAI,EAAA,GAAtCE,EAASD,EAAA,GAAEE,EAAWF,EAAA,GAE7BG,oBAAU,WACNC,IAAYC,IAAG,qBACV5F,KAAK,SAAA6F,GACFJ,EAAYI,EAAIC,SAEzB,IAAG,IAAAC,EAEsCf,mBAAS,IAAGgB,EAAAd,YAAAa,EAAA,GAAjDE,EAAcD,EAAA,GAAEE,EAAiBF,EAAA,GAAAG,EAEFnB,mBAAS,CAC3CoB,MAAO,KACTC,EAAAnB,YAAAiB,EAAA,GAFKG,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAqB5BG,EAAwB,eAAAC,EAAAC,YAAA5K,IAAA+G,KAAG,SAAA8D,EAAOC,GAAQ,OAAA9K,IAAAyB,KAAA,SAAAsJ,GAAA,cAAAA,EAAAnD,KAAAmD,EAAAzF,MAAA,OAC5CmF,EAAe,CACXH,MAAOQ,IAEXzB,EAAkByB,GAClBE,eAAeC,QAAQ,mBAAoBH,GAC3C9B,IACAoB,EAAkB,IAAI,wBAAAW,EAAAhD,SAAA8C,MACzB,gBAR6BK,GAAA,OAAAP,EAAAQ,MAAArI,KAAAsI,YAAA,GAW9B,OACIC,IAAAC,cAAA,OAAKC,UAAU,GAAGC,MAAO,CAAEC,MAAO,QAC9BJ,IAAAC,cAAA,SAAOC,UAAU,eAAeC,MAAO,CAACE,OAAO,QAAS5E,KAAK,QAAQ6E,SA/BhD,SAACC,GAC1BnB,EAAe,SAAA7C,GAAI,OAAAiE,YAAA,GAAUjE,EAAIkE,YAAA,GAAGF,EAAMG,OAAOjF,KAAO,CAAC8E,EAAMG,OAAOpL,WACtE,IAAMqL,EAAaJ,EAAMG,OAAOpL,MAAMsL,cAGhCC,EAAWxC,EAAUyC,OAAO,SAACC,GAC/B,IAAMtB,EAAWsB,EAAKtB,SAASuB,WAAWJ,cACpCK,EAASN,EAAWC,cAC1B,OAAOnB,EAASyB,SAASD,KAGzBlC,EADe,KAAf4B,EACkB,GAGAE,IAiBmFM,YAAY,WAAW7L,MAAO6J,EAAYF,QAEpH,IAA1BH,EAAe5D,OAAe8E,IAAAC,cAAAD,IAAAoB,SAAA,KAC3BpB,IAAAC,cAAA,OAAKC,UAAU,eACVpB,EAAeuC,IAAI,SAACC,EAAUC,GAC3B,OAAOvB,IAAAC,cAAA,QAAMuB,QAAS,kBAAMnC,EAAyBiC,EAAS7B,WAAWU,MAAO,CAAEsB,eAAgB,OAAQC,MAAO,UAC7G1B,IAAAC,cAAA,OAAKE,MAAO,CAAEwB,OAAQ,UAAWC,QAAS,OAAQC,OAAQ,MAAOH,MAAO,QAASI,OAAQ,oBAAqBC,QAAS,OAAQC,WAAY,UAAY5M,IAAKmM,GAASvB,IAAAC,cAACgC,IAAa,MAAG,IAAEX,EAAS7B,SAAS,IAAE6B,EAASY,KAAK,IAAEZ,EAAStI,YAK/OgH,IAAAC,cAAAD,IAAAoB,SAAA,KAAEpB,IAAAC,cAAA,KAAGE,MAAO,CAAEyB,QAAS,SAAS","file":"static/js/110.3fcffe2f.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axiosClient from './axiosClient';\r\nimport { FaLocationDot } from \"react-icons/fa6\";\r\n\r\n\r\nexport default function ChoosePinCodeModal({ onHide }) {\r\n    // const [pincode, setPincode] = useState('');\r\n    // const [data, setData] = useState([]); // State to hold fetched data\r\n    // const [isLoading, setIsLoading] = useState(false); // State for loading indicator\r\n\r\n    // const handlePincodeChange = (event) => {\r\n    //     setPincode(event.target.value);\r\n    // };\r\n\r\n    // const fetchLocations = async () => {\r\n    //     setIsLoading(true); // Set loading indicator to true\r\n    //     if (!pincode) return; // Early return if no pincode entered\r\n\r\n    //     try {\r\n    //         const response = await fetch(`/all/pincodes?pincode=${pincode}`);\r\n    //         const fetchedData = await response.json();\r\n    //         setData(fetchedData);\r\n    //     } catch (error) {\r\n    //         console.error('Error fetching data:', error);\r\n    //         // Handle errors appropriately, e.g., display an error message to the user\r\n    //     } finally {\r\n    //         setIsLoading(false); // Set loading indicator to false regardless of success or error\r\n    //     }\r\n    // };\r\n\r\n    // useEffect(() => {\r\n    //     fetchLocations();\r\n    // }, [pincode]); // Re-fetch data on pincode change\r\n\r\n    // const renderLocations = () => {\r\n    //     if (isLoading) return <p>Loading...</p>; // Loading message while fetching\r\n\r\n    //     if (!data.length) return <p>No data found for this pincode.</p>; // No data message\r\n\r\n\r\n    //     return (\r\n    //         <div>\r\n    //             <h2>Pharmacies:</h2>\r\n    //             <ul>\r\n    //                 {data.pharmacies.map((pharmacy) => (\r\n    //                     <li key={pharmacy.id}>{pharmacy.name} ({pharmacy.address})</li>\r\n    //                 ))}\r\n    //             </ul>\r\n\r\n    //             <h2>Clinics:</h2>\r\n    //             <ul>\r\n    //                 {data.clinics.map((clinic) => (\r\n    //                     <li key={clinic.id}>{clinic.name} ({clinic.address})</li>\r\n    //                 ))}\r\n    //             </ul>\r\n\r\n    //             <h2>Labs:</h2>\r\n    //             <ul>\r\n    //                 {data.labs.map((lab) => (\r\n    //                     <li key={lab.id}>{lab.name} ({lab.address})</li>\r\n    //                 ))}\r\n    //             </ul>\r\n\r\n    //             <h2>Doctors:</h2>\r\n    //             <ul>\r\n    //                 {data.doctors.map((doctor) => (\r\n    //                     <li key={doctor.id}>\r\n    //                         {doctor.name} - {doctor.specialization}\r\n    //                     </li>\r\n    //                 ))}\r\n    //             </ul>\r\n    //         </div>\r\n    //     );\r\n    // };\r\n\r\n    const [chooseLocation, setChooseLocation] = useState([])\r\n    const [selectLocation, setSelectLocation] = useState()\r\n    const [locations, setLocation] = useState([])\r\n\r\n    useEffect(() => {\r\n        axiosClient.get(`/served/locations`)\r\n            .then(res => {\r\n                setLocation(res.data);\r\n            })\r\n    }, [])\r\n\r\n    const [searchLocation, setSearchLocation] = useState([]);\r\n\r\n    const [searchValue, setSearchValue] = useState({\r\n        input: ''\r\n    })\r\n    const handleLocationFilter = (event) => {\r\n        setSearchValue(prev => ({ ...prev, [event.target.name]: [event.target.value] }))\r\n        const searchword = event.target.value.toLowerCase();\r\n        // console.log(searchword)\r\n        // console.log(locations)\r\n        const filtered = locations.filter((item) => {\r\n            const pin_code = item.pin_code.toString().toLowerCase();\r\n            const search = searchword.toLowerCase();\r\n            return pin_code.includes(search);\r\n        });\r\n        if (searchword === \"\") {\r\n            setSearchLocation([]);\r\n        } else {\r\n            // console.log(filtered)\r\n            setSearchLocation(filtered);\r\n        }\r\n    };\r\n\r\n    const setLocationValueTOFilter = async (pin_code) => {\r\n        setSearchValue({\r\n            input: pin_code,\r\n        });\r\n        setChooseLocation(pin_code);\r\n        sessionStorage.setItem(\"current_pin_code\", pin_code);\r\n        onHide();\r\n        setSearchLocation([]);\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"\" style={{ width: '90%' }}>\r\n            <input className=\"form-control\" style={{height:'50px'}} name='input' onChange={handleLocationFilter} placeholder=\"Pin Code\" value={searchValue.input} />\r\n\r\n            {searchLocation.length !== 0 ? <>\r\n                <div className=\"inputResult\" >\r\n                    {searchLocation.map((location, index) => {\r\n                        return <span onClick={() => setLocationValueTOFilter(location.pin_code)} style={{ textDecoration: 'none', color: 'black' }}  >\r\n                            <div style={{ cursor: 'pointer', padding: '15px', margin: '5px', color: 'black', border: '2px solid #fff0d7', display: 'flex', alignItems: 'center' }} key={index}  ><FaLocationDot /> {location.pin_code},{location.City},{location.state}</div>\r\n                        </span>\r\n                    }\r\n                    )}\r\n                </div>\r\n            </> : <><p style={{ padding: '15px'}}>No data found for this pincode!!</p></>}\r\n\r\n\r\n            {/* <h1>Find Nearby Services</h1> */}\r\n            {/* <input\r\n   type=\"text\"\r\n   placeholder=\"Enter Pincode\"\r\n   value={pincode}\r\n   onChange={handlePincodeChange}\r\n />\r\n <button onClick={fetchLocations}>Search</button>\r\n {renderLocations()} */}\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n"],"sourceRoot":""}