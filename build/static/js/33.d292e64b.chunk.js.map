{"version":3,"sources":["component/Service_Provider/Sub_Admin_Login.js","img/loginpageimg.jpg","component/usePasswordToggle.js","component/LoginValidaation.js"],"names":["ChooseRoleModal","lazy","__webpack_require__","e","then","bind","Sub_Admin_Login","axiosClient","defaults","withCredentials","_useState","useState","phone","password","_useState2","_slicedToArray","values","setValues","navigate","useNavigate","_useState3","_useState4","errors","setErrors","handleInput","event","prev","_objectSpread","_defineProperty","target","name","value","_React$useState","React","_React$useState2","modalIsOpen","setIsOpen","closeModal","document","body","style","overflow","_usePasswordToggle","usePasswordToggle","_usePasswordToggle2","PasswordInputType","ToggleIcon","createElement","id","className","src","img","width","alt","height","action","onSubmit","preventDefault","validation","user","post","res","data","toast","error","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","alert","success","state","loggedIn","sessionStorage","setItem","catch","err","console","log","textAlign","fontWeight","htmlFor","onChange","type","required","pattern","placeholder","border","color","backgroundColor","Fragment","borderRadius","onClick","Modal","isOpen","onAfterOpen","onRequestClose","content","overflowY","top","left","right","bottom","marginRight","transform","contentLabel","Suspense","fallback","HashLoader","closeTheModal","ToastContainer","module","exports","p","visible","setVisiblity","FaEye","FaEyeSlash"],"mappings":"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","file":"static/js/33.d292e64b.chunk.js","sourcesContent":["import React, { Suspense, lazy, useState } from 'react'\r\nimport img from '../../img/loginpageimg.jpg'\r\nimport '../style.css';\r\nimport validation from '../LoginValidaation';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport Modal from 'react-modal';\r\n// import ChooseRoleModal from './ChooseRoleModal';\r\nimport axiosClient from '../axiosClient';\r\nimport usePasswordToggle from '../usePasswordToggle';\r\nimport HashLoader from 'react-spinners/HashLoader';\r\nconst ChooseRoleModal = lazy(() => import('./ChooseRoleModal'));\r\n\r\n\r\n\r\nexport default function Sub_Admin_Login() {\r\n    //main for connecting backend with Session\r\n    axiosClient.defaults.withCredentials = true;\r\n    // const [loggedIn, setLoggedIn] = useState(true);\r\n    // loggedIn\r\n    const success = () => toast.success('Login Successfull', {\r\n        position: \"top-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"light\",\r\n    });;\r\n    const danger = () => toast.error('Login Fail ! Phone Number Or Password dose not match ', {\r\n        position: \"top-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"light\",\r\n    });\r\n\r\n    const [values, setValues] = useState({\r\n        phone: '',\r\n        password: ''\r\n    })\r\n    const navigate = useNavigate();\r\n\r\n    const [errors, setErrors] = useState([])\r\n    const handleInput = (event) => {\r\n        setValues(prev => ({ ...prev, [event.target.name]: [event.target.value] }))\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        setErrors(validation(values));\r\n        if (errors.phone === \"\" && errors.password === \"\") {\r\n            const user = axiosClient.post(`/sub-admin/login`, values)\r\n                .then(res => {\r\n                    if (res.data === null) {\r\n                        danger();\r\n                    }\r\n                    else if (res.data === 'Not_Approve') {\r\n                        alert(\"Your Profile Not Verified by Admin || Please Wait for 24 hr Or Connect with Healthhepta.com \")\r\n                    }\r\n                    else if (res.data[0] !== null) {\r\n                        // localStorage.setItem('user-info', JSON.stringify(user));\r\n                        // setLoggedIn(true)               \r\n                        success();\r\n                        navigate('/b2b-home', { state: { loggedIn: res.data[1] } });\r\n                        sessionStorage.setItem(\"user_id\", res.data[0].id);\r\n                        sessionStorage.setItem(\"LogedIn\", res.data[1]);\r\n\r\n\r\n                    }\r\n                })\r\n                .catch(err => console.log(err));\r\n            console.log(user)\r\n        }\r\n    }\r\n\r\n    const customStyles = {\r\n        content: {\r\n            overflowY: 'hidden',\r\n            top: '50%',\r\n            left: '50%',\r\n            right: 'auto',\r\n            bottom: 'auto',\r\n            marginRight: '-50%',\r\n            transform: 'translate(-50%, -50%)',\r\n        },\r\n    };\r\n\r\n\r\n    const [modalIsOpen, setIsOpen] = React.useState(false);\r\n\r\n    function openModal() {\r\n        setIsOpen(true);\r\n    }\r\n\r\n    function afterOpenModal() {\r\n        document.body.style.overflow = 'hidden';\r\n    }\r\n\r\n    function closeModal() {\r\n        document.body.style.overflow = 'unset';\r\n        setIsOpen(false);\r\n    }\r\n    const [PasswordInputType, ToggleIcon] = usePasswordToggle();\r\n\r\n    return (\r\n        <div id='sub_admin_login_mob' className='d-flex justify-content-center align-item-center  p-3 m-3'>\r\n\r\n            <div className=\"img login-img\" >\r\n                <img src={img} style={{ width: '38vw' }} alt=\"....\" />\r\n            </div>\r\n            <div className='bg-white m-3 pt-3 pl-2 rounded w-30 shadow' style={{ height: '110%' }}>\r\n                <form action='submit' onSubmit={handleSubmit}>\r\n                    <h5>Log in to <span className='text-info'>Healthhepta</span></h5>\r\n\r\n                    <div className='p-2' style={{ textAlign: 'initial', fontWeight: '700' }} >\r\n                        <label className='p-2' htmlFor=\"phonenumber\">Phone Number : </label><br></br>\r\n                        <input\r\n                            className='m-2 p-1'\r\n                            onChange={handleInput}\r\n                            name='phone'\r\n                            id=\"phone\"\r\n                            type=\"tel\"\r\n                            required\r\n                            pattern=\"[0-9]{3}[0-9]{3}[0-9]{4}\" placeholder=\"xxxxxxxxxx\" style={{ width: '90%', border: '1px solid black' }} />\r\n                        <span className=\"validity\"></span>\r\n                    </div>\r\n                    <div className='mb-3 p-2' style={{ textAlign: 'initial', fontWeight: '700', position: 'relative' }} >\r\n                        <label className='p-2' htmlFor=\"password\">Password : </label>\r\n                        <input className='m-2  p-1' type={PasswordInputType} style={{ width: '90%' }} name='password' placeholder='Enter Password' onChange={handleInput} />\r\n                        <br />\r\n                        <span className=\"password-toogle-icon\">{ToggleIcon}</span>\r\n                        {errors.password && <span className='text-danger'>{errors.password}</span>}\r\n                    </div>\r\n                    <button type='submit' className='btn' style={{ width: '90%', color: 'white', backgroundColor: '#6775ec' }}>Log In</button>\r\n                    <p >You are agree to our <span className='text-primary'>terms & policies</span> </p>\r\n                    <p className='px-2'>Do not have any account please  <span className='text-primary'>create an Account</span> </p>\r\n                    {/* <Link to='/sub-admin/signup'>\r\n                        <button className='  btn-default border p-2 mb-3 btnonhover' style={{ borderRadius: '5px', width: '90%' }}>Create Account</button>\r\n                    </Link> */}\r\n                    <>\r\n                        {/* <Link className=\"btn-default border p-2 mb-3 btnonhover\" onClick={openModal}><p>Create Account</p></Link> */}\r\n                        <button className='  btn-default border p-2 mb-3 btnonhover' style={{ borderRadius: '5px', width: '90%' }} onClick={openModal}>Create Account</button>\r\n                        <Modal\r\n                            isOpen={modalIsOpen}\r\n                            onAfterOpen={afterOpenModal}\r\n                            onRequestClose={closeModal}\r\n                            style={customStyles}\r\n                            contentLabel=\"Example Modal\"\r\n                        >\r\n                            <div className='dis-flex'> <Suspense fallback={<HashLoader color=\"#36d7b7\" />}> <ChooseRoleModal closeTheModal={closeModal} /></Suspense> </div>\r\n                        </Modal>\r\n\r\n                    </>\r\n                </form>\r\n            </div>\r\n            <ToastContainer />\r\n        </div>\r\n    )\r\n}\r\n","module.exports = __webpack_public_path__ + \"static/media/loginpageimg.27e1c41d.jpg\";","import React, { useState } from 'react'\r\nimport { FaEye,FaEyeSlash } from \"react-icons/fa\";\r\nfunction usePasswordToggle() {\r\n    const [visible,setVisiblity] = useState(false);\r\n    const Icon = visible ? <FaEye onClick={()=>setVisiblity(visible=>!visible)} /> : <FaEyeSlash onClick={()=>setVisiblity(visible=>!visible)}/>\r\n    const InputType = visible ? \"text\" : \"password\"\r\n  return [InputType,Icon]\r\n} \r\nexport default usePasswordToggle\r\n","function validation(values){\r\n    let error = {}\r\n    \r\n    if(values.phone === \"\"){\r\n        error.phone = \"The phone number can not be empty\"\r\n    }\r\n   \r\n    else{\r\n        error.phone = \"\"\r\n    }\r\n    \r\n    if(values.password === \"\"){\r\n        error.password = \"The password number can not be empty\"\r\n    }\r\n   \r\n    else{\r\n        error.password = \"\"\r\n    }\r\n    return error;\r\n\r\n}\r\nexport default validation;"],"sourceRoot":""}